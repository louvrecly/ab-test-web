{"version":3,"sources":["redux/threads/actions.ts","redux/components/actions.ts","components/Map/constant.ts","components/Map/index.tsx","redux/voices/thunks.ts","redux/voices/actions.ts","components/HeadNav/index.tsx","redux/audios/actions.ts","components/RecordButton/index.tsx","components/DrawerContainer/index.tsx","utils/time.ts","components/VoiceInfo/index.tsx","components/PlayList/index.tsx","components/ThreadPanel/index.tsx","components/TimerBar/index.tsx","components/AudioPlayer/index.tsx","utils/geolocation.ts","components/VoiceForm/index.tsx","redux/threads/thunks.ts","components/Main/index.tsx","utils/audioRecorder.ts","App.tsx","redux/users/thunks.ts","redux/users/actions.ts","redux/threads/reducer.ts","redux/voices/reducer.ts","redux/users/reducer.ts","redux/audios/reducer.ts","redux/channels/reducer.ts","redux/components/reducer.ts","store.ts","serviceWorker.ts","index.tsx","components/VoiceForm/styles.module.scss","components/ThreadPanel/styles.module.scss","components/HeadNav/styles.module.scss","components/VoiceInfo/styles.module.scss","components/AudioPlayer/styles.module.scss","components/Map/styles.module.scss","components/RecordButton/styles.module.scss","components/PlayList/styles.module.scss","components/DrawerContainer/styles.module.scss","components/TimerBar/styles.module.scss","components/Main/styles.module.scss","App.module.scss"],"names":["createThreadSuccess","newThread","type","failed","msg","setShowRecordButtonState","showRecordButton","setShowPlayListState","showPlayList","setDrawerState","side","open","embedRecordButton","embeddedRecordButton","urlTemplate","process","options","center","zoom","zoomSnap","zoomDelta","zoomControl","doubleClickZoom","connect","state","threads","drawerState","components","dispatch","setActiveThread","thread","activeThread","loadVoices","threadId","a","fetch","method","res","json","isSuccess","data","voices","stopPlayingThread","mapRef","useRef","layerRef","markerRef","history","useHistory","useEffect","container","L","DomUtil","get","_leaflet_id","tileLayer","className","classes","attribution","mapOptions","layers","current","map","layerGroup","addTo","clearLayers","icon","divIcon","forEach","position","latLng","location","_latitude","_longitude","popup","closeButton","pane","marker","bindPopup","on","event","target","id","flyTo","push","channel","channels","props","AppBar","Toolbar","IconButton","menu","edge","color","aria-label","onClick","left","ButtonGroup","switch","Button","prev","stage","next","search","setAudio","audio","recorder","audios","isRecording","setIsRecordingState","useLocation","startRecording","pathname","replace","start","console","log","stopRecording","stop","clsx","floating","button","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onContextMenu","preventDefault","toggleDrawer","key","SwipeableDrawer","anchor","disableSwipeToOpen","disableSwipe","onClose","onOpen","drawer","children","sanitizedDate","timestampObj","_seconds","_nanoseconds","timestamp","firestore","Timestamp","moment","toDate","fromNow","getTimestamp","milliseconds","Date","now","seconds","Math","floor","nanoseconds","users","profile","badge","find","user","voice","user_id","split","followers","length","info","date","username","like","liked_by_users","idx","threadPlaying","toggleThreadPlaying","toggleShowPlayList","handle","contents","title","control","TimerBar","timer","useState","isPlaying","setIsPlayingState","Audio","audioUrl","addEventListener","play","pause","delete","getGeolocation","geolocation","window","navigator","Promise","resolve","reject","getCurrentPosition","positionToGeoPoint","coords","latitude","longitude","GeoPoint","getGeoPoint","undefined","createThread","headers","body","JSON","stringify","useForm","register","handleSubmit","value","setValue","submitVoice","voiceFormData","threadTitle","is_active","color_code","bookmarked_by_users","thread_id","voice_url","form","onSubmit","fields","field","label","htmlFor","select","name","ref","option","input","required","onChange","readOnly","Boolean","buttons","new","music","submit","main","path","component","VoiceForm","ThreadPanel","loadThreads","loadUsers","setRecorder","initializeRecorder","mediaDevices","getUserMedia","stream","mediaRecorder","MediaRecorder","dataAvailableHandler","audioChunk","audioBlob","Blob","URL","createObjectURL","app","initialState","top","right","bottom","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","rootReducer","combineReducers","action","concat","router","connectRouter","store","createStore","applyMiddleware","logger","thunk","routerMiddleware","hostname","match","ReactDOM","render","document","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.a04cf4ac.chunk.js","sourcesContent":["import { Thread } from 'models';\n\nexport function loadThreadsSuccess(threads: Array<Thread>) {\n  return {\n    type: 'LOAD_THREADS' as 'LOAD_THREADS',\n    threads\n  };\n}\n\nexport function createThreadSuccess(newThread: Thread) {\n  return {\n    type: 'CREATE_THREAD' as 'CREATE_THREAD',\n    newThread\n  };\n}\n\nexport function setActiveThread(activeThread?: Thread) {\n  return {\n    type: 'SET_ACTIVE_THREAD' as 'SET_ACTIVE_THREAD',\n    activeThread\n  };\n}\n\nexport function toggleThreadPlaying() {\n  return {\n    type: 'TOGGLE_THREAD_PLAYING' as 'TOGGLE_THREAD_PLAYING'\n  };\n}\n\nexport function stopPlayingThread() {\n  return {\n    type: 'STOP_PLAYING_THREAD' as 'STOP_PLAYING_THREAD'\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_THREADS_FAILED' | 'CREATE_THREAD_FAILED';\n\ntype ThreadsActionCreators =\n  | typeof loadThreadsSuccess\n  | typeof createThreadSuccess\n  | typeof setActiveThread\n  | typeof toggleThreadPlaying\n  | typeof stopPlayingThread\n  | typeof failed;\n\nexport type IThreadsAction = ReturnType<ThreadsActionCreators>;\n","import { DrawerSide } from 'redux/components/state';\n\nexport function setShowRecordButtonState(showRecordButton: boolean) {\n  return {\n    type: 'SET_SHOW_RECORD_BUTTON_STATE' as 'SET_SHOW_RECORD_BUTTON_STATE',\n    showRecordButton\n  };\n}\n\nexport function setShowPlayListState(showPlayList: boolean) {\n  return {\n    type: 'SET_SHOW_PLAY_LIST_STATE' as 'SET_SHOW_PLAY_LIST_STATE',\n    showPlayList\n  };\n}\n\nexport function setDrawerState(side: DrawerSide, open: boolean) {\n  return {\n    type: 'SET_DRAWER_STATE' as 'SET_DRAWER_STATE',\n    side,\n    open\n  };\n}\n\nexport function embedRecordButton(embeddedRecordButton: boolean) {\n  return {\n    type: 'EMBED_RECORD_BUTTON' as 'EMBED_RECORD_BUTTON',\n    embeddedRecordButton\n  };\n}\n\ntype ComponentsActionCreators =\n  | typeof setShowRecordButtonState\n  | typeof setShowPlayListState\n  | typeof setDrawerState\n  | typeof embedRecordButton;\n\nexport type IComponentsAction = ReturnType<ComponentsActionCreators>;\n","import L from 'leaflet';\n\nconst { REACT_APP_STADIA_MAP_API_KEY } = process.env;\n\nconst tsimShaTsuiLatLng: [number, number] = [22.2988, 114.1722];\n\nexport const urlTemplate: string = `https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=${REACT_APP_STADIA_MAP_API_KEY}`;\n\nexport const attribution: string = `\n  &copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>,\n  &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a>\n  &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a>\n  contributors\n`;\n\nexport const options: L.MapOptions = {\n  center: tsimShaTsuiLatLng,\n  zoom: 12,\n  zoomSnap: 0.1,\n  zoomDelta: 0.5,\n  zoomControl: false,\n  doubleClickZoom: false\n};\n","import React, { useEffect, useRef } from 'react';\nimport { useHistory } from 'react-router';\nimport L from 'leaflet';\nimport { Thread } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { DrawerSide } from 'redux/components/state';\nimport { setActiveThread, stopPlayingThread } from 'redux/threads/actions';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  setShowPlayListState\n} from 'redux/components/actions';\nimport { loadVoices } from 'redux/voices/thunks';\nimport { connect } from 'react-redux';\nimport { urlTemplate, attribution, options } from './constant';\nimport classes from './styles.module.scss';\n\nconst { REACT_APP_URL_PREFIX } = process.env;\n\ninterface IMapProps {\n  threads: Array<Thread>;\n  setActiveThread: (thread?: Thread) => void;\n  loadVoices: (threadId: string) => void;\n  stopPlayingThread: () => void;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  setShowPlayListState: (showPlayList: boolean) => void;\n}\n\nconst Map: React.FC<IMapProps> = ({\n  threads,\n  setActiveThread, /* tslint:disable-line */\n  loadVoices, /* tslint:disable-line */\n  stopPlayingThread, /* tslint:disable-line */\n  setDrawerState, /* tslint:disable-line */\n  setShowRecordButtonState, /* tslint:disable-line */\n  setShowPlayListState /* tslint:disable-line */\n}: IMapProps) => {\n  const mapRef: React.MutableRefObject<L.Map | null> = useRef(null);\n  const layerRef: React.MutableRefObject<L.LayerGroup | null> = useRef(null);\n  const markerRef: React.MutableRefObject<L.Marker | null> = useRef(null);\n\n  const history = useHistory();\n\n  /* initialize map and add tile layer */\n  useEffect(() => {\n    const container = L.DomUtil.get('map');\n    if (container) {\n      (container as any)._leaflet_id = null;\n    }\n\n    const tileLayer: L.TileLayer = L.tileLayer(urlTemplate, {\n      className: classes['tile-layer'],\n      attribution\n    });\n\n    const mapOptions: L.MapOptions = { ...options, layers: [tileLayer] };\n    mapRef.current = L.map('map', mapOptions);\n  }, []);\n\n  /* create layer group */\n  useEffect(() => {\n    layerRef.current = L.layerGroup().addTo(mapRef.current as L.Map);\n  }, []);\n\n  /* create popup and markers */\n  useEffect(() => {\n    (layerRef.current as L.LayerGroup).clearLayers();\n    const icon: L.DivIcon = L.divIcon({ className: classes.icon });\n\n    threads.forEach(thread => {\n      const position = L.latLng([\n        (thread.location as any)._latitude,\n        (thread.location as any)._longitude\n      ]);\n\n      const popup: L.Popup = L.popup({\n        className: classes.popup,\n        closeButton: false,\n        pane: 'shadowPane' /* avoid masking other markers */\n      });\n\n      const popupOpenHandler = (event: L.LeafletEvent) => {\n        markerRef.current = event.target as L.Marker;\n        stopPlayingThread();\n        setActiveThread(thread);\n        loadVoices(thread.id as string);\n        (mapRef.current as L.Map).flyTo(position);\n        setShowPlayListState(false);\n        setShowRecordButtonState(false);\n        setDrawerState('bottom', true);\n        history.push(`${REACT_APP_URL_PREFIX}/threads/${thread.id}`);\n      };\n\n      const popupCloseHandler = () => {\n        markerRef.current = null;\n        setActiveThread();\n        setShowRecordButtonState(true);\n        setDrawerState('bottom', false);\n        history.push(REACT_APP_URL_PREFIX as string);\n      };\n\n      L.marker(position, { icon })\n        .bindPopup(popup)\n        .on('popupopen', popupOpenHandler)\n        .on('popupclose', popupCloseHandler)\n        .addTo(layerRef.current as L.LayerGroup);\n    });\n  }, [\n    threads,\n    history,\n    stopPlayingThread,\n    setActiveThread,\n    loadVoices,\n    setDrawerState,\n    setShowRecordButtonState,\n    setShowPlayListState\n  ]);\n\n  return <div id=\"map\" className={classes.map} />;\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    threads: state.threads.threads,\n    drawerState: state.components.drawerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setActiveThread: (thread?: Thread) => dispatch(setActiveThread(thread)),\n    loadVoices: (threadId: string) => dispatch(loadVoices(threadId)),\n    stopPlayingThread: () => dispatch(stopPlayingThread()),\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    setShowPlayListState: (showPlayList: boolean) =>\n      dispatch(setShowPlayListState(showPlayList))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n","import { Dispatch } from 'redux';\nimport { IVoicesAction, loadVoicesSuccess, failed } from './actions';\n\nconst { REACT_APP_API_SERVER } = process.env;\n\nexport function loadVoices(threadId: string) {\n  return async (dispatch: Dispatch<IVoicesAction>) => {\n    const res = await fetch(\n      `${REACT_APP_API_SERVER}/voices?thread_id=${threadId}`,\n      { method: 'GET' }\n    );\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadVoicesSuccess(data));\n    } else {\n      dispatch(failed('LOAD_VOICES_FAILED', data));\n    }\n  };\n}\n","import { Voice } from 'models';\n\nexport function loadVoicesSuccess(voices: Array<Voice>) {\n  return {\n    type: 'LOAD_VOICES' as 'LOAD_VOICES',\n    voices\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_VOICES_FAILED';\n\ntype VoicesActionCreators = typeof loadVoicesSuccess | typeof failed;\n\nexport type IVoicesAction = ReturnType<VoicesActionCreators>;\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  ButtonGroup,\n  Button\n} from '@material-ui/core';\nimport { FiSearch } from 'react-icons/fi';\nimport {\n  MdFormatListBulleted,\n  MdChevronLeft,\n  MdChevronRight\n} from 'react-icons/md';\nimport { ThunkResult, IRootState } from 'store';\nimport { DrawerSide, DrawerState } from 'redux/components/state';\nimport {\n  setDrawerState,\n  setShowRecordButtonState\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IHeadNavProps {\n  channel: string;\n  drawerState: DrawerState;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n}\n\nconst HeadNav: React.FC<IHeadNavProps> = (props: IHeadNavProps) => {\n  const toggleLeftDrawer = () => {\n    const open = !props.drawerState.left;\n    props.setShowRecordButtonState(!open);\n    props.setDrawerState('left', open);\n  };\n\n  return (\n    <AppBar className={classes['head-nav']} position=\"absolute\">\n      <Toolbar>\n        <IconButton\n          className={`${classes.menu} ${classes['nav-menu']}`}\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={toggleLeftDrawer}\n        >\n          <MdFormatListBulleted />\n        </IconButton>\n\n        <ButtonGroup className={classes.switch}>\n          <Button\n            className={`${classes.prev} ${classes['stage-previous']}`}\n            aria-label=\"previous\"\n          >\n            <MdChevronLeft />\n          </Button>\n\n          <Button className={classes.stage} color=\"inherit\">\n            {props.channel}\n          </Button>\n\n          <Button\n            className={`${classes.next} ${classes['stage-next']}`}\n            aria-label=\"next\"\n          >\n            <MdChevronRight />\n          </Button>\n        </ButtonGroup>\n\n        <IconButton\n          className={`${classes.search} ${classes['nav-search']}`}\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"search\"\n        >\n          <FiSearch />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    channel: state.channels.channel,\n    drawerState: state.components.drawerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadNav);\n","import { AudioRecorder, AudioData } from 'utils/audioRecorder';\n\nexport function setRecorder(recorder?: AudioRecorder) {\n  return {\n    type: 'SET_RECORDER' as 'SET_RECORDER',\n    recorder\n  };\n}\n\nexport function setAudio(audio?: AudioData) {\n  return {\n    type: 'SET_AUDIO' as 'SET_AUDIO',\n    audio\n  };\n}\n\nexport function setIsRecordingState(isRecording: boolean) {\n  return {\n    type: 'SET_IS_RECORDING_STATE' as 'SET_IS_RECORDING_STATE',\n    isRecording\n  };\n}\n\ntype AudiosActionCreators =\n  | typeof setRecorder\n  | typeof setAudio\n  | typeof setIsRecordingState;\n\nexport type IAudiosAction = ReturnType<AudiosActionCreators>;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { IconButton } from '@material-ui/core';\nimport { Thread } from 'models';\nimport { DrawerSide } from 'redux/components/state';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { IRootState, ThunkResult } from 'store';\nimport { setAudio, setIsRecordingState } from 'redux/audios/actions';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport { AudioData, AudioRecorder } from 'utils/audioRecorder';\nimport classes from './styles.module.scss';\n\nconst { REACT_APP_URL_PREFIX } = process.env;\n\ninterface IRecordButtonProps {\n  recorder: AudioRecorder | undefined;\n  isRecording: boolean;\n  activeThread: Thread | undefined;\n  showRecordButton: boolean;\n  embeddedRecordButton: boolean;\n  setAudio: (audio?: AudioData) => void;\n  setIsRecordingState: (isRecording: boolean) => void;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n}\n\nconst RecordButton: React.FC<IRecordButtonProps> = (\n  props: IRecordButtonProps\n) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const startRecording = () => {\n    if (props.recorder && !props.isRecording) {\n      const pathname = location.pathname.replace('/new', '');\n      history.push(pathname);\n      props.setDrawerState('bottom', true);\n      props.recorder.start();\n      props.setIsRecordingState(true);\n      props.embedRecordButton(false);\n    } else {\n      console.log('recorder is not ready!'); /* tslint:disable-line */\n    }\n  };\n\n  const stopRecording = async () => {\n    if (props.isRecording) {\n      const audio = await props.recorder?.stop();\n      props.setAudio(audio as AudioData);\n      props.setIsRecordingState(false);\n      const pathname = `${\n        props.activeThread\n          ? location.pathname\n          : `${REACT_APP_URL_PREFIX}/threads`\n      }/new`;\n      history.push(pathname);\n      props.setShowRecordButtonState(false);\n    } else {\n      console.log('no audio is being recorded'); /* tslint:disable-line */\n    }\n  };\n\n  /* disable context menu from long press event in mobile or tablet devices */\n  const disableContextMenu = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => event.preventDefault();\n\n  return (\n    <div\n      className={clsx({\n        [classes['record-button']]: true,\n        [classes.floating]: !props.embeddedRecordButton\n      })}\n    >\n      <IconButton\n        id=\"record\"\n        className={classes.button}\n        aria-label=\"record\"\n        onMouseDown={startRecording}\n        onTouchStart={startRecording}\n        onMouseUp={stopRecording}\n        onTouchEnd={stopRecording}\n        onContextMenu={disableContextMenu}\n      >\n        {props.embeddedRecordButton ? '開始錄' : '9up'}\n      </IconButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    recorder: state.audios.recorder,\n    isRecording: state.audios.isRecording,\n    activeThread: state.threads.activeThread,\n    showRecordButton: state.components.showRecordButton,\n    embeddedRecordButton: state.components.embeddedRecordButton\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setAudio: (audio?: AudioData) => dispatch(setAudio(audio)),\n    setIsRecordingState: (isRecording: boolean) =>\n      dispatch(setIsRecordingState(isRecording)),\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordButton);\n","import React from 'react';\nimport clsx from 'clsx';\nimport { SwipeableDrawer } from '@material-ui/core';\nimport { IRootState, ThunkResult } from 'store';\nimport { DrawerSide, DrawerState } from 'redux/components/state';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IDrawerContainerProps {\n  side: DrawerSide;\n  drawerState: DrawerState;\n  disableSwipe?: boolean;\n  children: React.ReactNode;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n}\n\nconst DrawerContainer: React.FC<IDrawerContainerProps> = (\n  props: IDrawerContainerProps\n) => {\n  const toggleDrawer = (side: DrawerSide, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    props.setShowRecordButtonState(!open);\n    props.setDrawerState(side, open);\n    props.embedRecordButton(open); /* reset RecordButton */\n  };\n\n  return (\n    <SwipeableDrawer\n      anchor={props.side}\n      open={props.drawerState[props.side]}\n      disableSwipeToOpen={props.disableSwipe}\n      onClose={toggleDrawer(props.side, false)}\n      onOpen={toggleDrawer(props.side, true)}\n      className={clsx({\n        [classes.drawer]: true,\n        [classes['drawer-horizontal']]:\n          props.side === 'left' || props.side === 'right'\n      })}\n    >\n      {props.children}\n    </SwipeableDrawer>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    drawerState: state.components.drawerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerContainer);\n","import { firestore } from 'firebase';\nimport moment from 'moment';\n\nexport function sanitizedDate(timestampObj: {\n  _seconds: number;\n  _nanoseconds: number;\n}) {\n  const { _seconds, _nanoseconds } = timestampObj;\n  const timestamp = new firestore.Timestamp(_seconds, _nanoseconds);\n  return moment(timestamp.toDate()).fromNow();\n}\n\nexport function getTimestamp() {\n  const milliseconds = Date.now();\n  const seconds = Math.floor(milliseconds / 1000);\n  const nanoseconds = (milliseconds - seconds * 1000) * 1000000;\n  const timestamp = new firestore.Timestamp(seconds, nanoseconds);\n  return timestamp;\n}\n","import React from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FaUserPlus, FaRegHeart } from 'react-icons/fa';\nimport { Voice, User } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport { sanitizedDate } from 'utils/time';\nimport classes from './styles.module.scss';\n\ninterface IVoiceInfoProps {\n  voice: Voice;\n  users: Array<User>;\n}\n\nconst VoiceInfo: React.FC<IVoiceInfoProps> = (props: IVoiceInfoProps) => {\n  return (\n    <div className={classes['voice-info']}>\n      <IconButton className={classes.profile} aria-label=\"profile\">\n        <FaUserPlus />\n\n        <span className={classes.badge}>\n          {\n            props.users.find(\n              user => user.id === props.voice.user_id.split('/')[1]\n            )?.followers?.length\n          }\n          +\n        </span>\n      </IconButton>\n\n      <div className={classes.info}>\n        <p className={classes.date}>\n          {sanitizedDate(props.voice.timestamp as any)}\n        </p>\n\n        <h3 className={classes.user}>\n          {\n            props.users.find(\n              user => user.id === props.voice.user_id.split('/')[1]\n            )?.username\n          }\n        </h3>\n      </div>\n\n      <IconButton className={classes.like} aria-label=\"like\">\n        <FaRegHeart />\n\n        <span className={classes.badge}>\n          {props.voice.liked_by_users.length}+\n        </span>\n      </IconButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: state.users.users\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoiceInfo);\n","import React from 'react';\nimport clsx from 'clsx';\nimport VoiceInfo from 'components/VoiceInfo';\nimport { Voice } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IPlayListProps {\n  open: boolean;\n  voices: Array<Voice>;\n}\n\nconst PlayList: React.FC<IPlayListProps> = (props: IPlayListProps) => {\n  return (\n    <div\n      className={clsx({\n        [classes['play-list']]: true,\n        [classes.open]: props.open\n      })}\n    >\n      <ul className={classes.voices}>\n        {props.voices.map((voice, idx) => (\n          <li key={idx}>\n            <VoiceInfo voice={voice} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    voices: state.voices.voices\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayList);\n","import React from 'react';\nimport PlayList from 'components/PlayList';\nimport { IconButton } from '@material-ui/core';\nimport { FaRegStar, FaPlay, FaPause } from 'react-icons/fa';\nimport { MdSkipPrevious, MdSkipNext } from 'react-icons/md';\nimport { FiShare } from 'react-icons/fi';\nimport { Thread, User, Voice } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { toggleThreadPlaying } from 'redux/threads/actions';\nimport {\n  setShowPlayListState,\n  setShowRecordButtonState\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport { sanitizedDate } from 'utils/time';\nimport classes from './styles.module.scss';\n\ninterface IThreadPanelProps {\n  activeThread: Thread | undefined;\n  users: Array<User>;\n  voices: Array<Voice>;\n  threadPlaying: boolean;\n  showPlayList: boolean;\n  toggleThreadPlaying: () => void;\n  setShowPlayListState: (showPlayList: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n}\n\nconst ThreadPanel: React.FC<IThreadPanelProps> = (props: IThreadPanelProps) => {\n  const toggleShowPlayList = () => {\n    const showPlayList = !props.showPlayList;\n    props.setShowPlayListState(showPlayList);\n    props.setShowRecordButtonState(showPlayList);\n  };\n\n  const playOrPauseThread = () => {\n    props.setShowPlayListState(true);\n    props.setShowRecordButtonState(true);\n    props.toggleThreadPlaying();\n  };\n\n  return (\n    <div className={classes['thread-panel']}>\n      {props.activeThread && (\n        <div className={classes.container}>\n          <div className={classes.handle} onClick={toggleShowPlayList} />\n\n          <div className={classes.contents}>\n            <h2 className={classes.title} onClick={toggleShowPlayList}>\n              {props.activeThread.title}\n            </h2>\n\n            <p className={classes.info}>\n              {\n                props.users.find(\n                  user => user.id === props.activeThread?.user_id.split('/')[1]\n                )?.username\n              }\n              ・{sanitizedDate(props.activeThread.timestamp as any)}\n            </p>\n\n            <div className={classes.control}>\n              <IconButton\n                className={classes['control-star']}\n                color=\"inherit\"\n                aria-label=\"star\"\n              >\n                <FaRegStar />\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-previous']}\n                color=\"inherit\"\n                aria-label=\"previous\"\n              >\n                <MdSkipPrevious />\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-play']}\n                color=\"inherit\"\n                aria-label=\"play\"\n                onClick={playOrPauseThread}\n              >\n                {props.threadPlaying ? <FaPause /> : <FaPlay />}\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-next']}\n                color=\"inherit\"\n                aria-label=\"next\"\n              >\n                <MdSkipNext />\n              </IconButton>\n\n              <IconButton\n                className={classes['control-share']}\n                color=\"inherit\"\n                aria-label=\"share\"\n              >\n                <FiShare />\n              </IconButton>\n            </div>\n\n            <PlayList open={props.showPlayList} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    activeThread: state.threads.activeThread,\n    users: state.users.users,\n    voices: state.voices.voices,\n    threadPlaying: state.threads.threadPlaying,\n    showPlayList: state.components.showPlayList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    toggleThreadPlaying: () => dispatch(toggleThreadPlaying()),\n    setShowPlayListState: (showPlayList: boolean) =>\n      dispatch(setShowPlayListState(showPlayList)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreadPanel);\n","import React from 'react';\nimport classes from './styles.module.scss';\n\nconst TimerBar: React.FC = () => {\n  return (\n    <div className={classes['timer-bar']}>\n      <h2 className={classes.timer}>00:00</h2>\n    </div>\n  );\n};\n\nexport default TimerBar;\n","import React, { useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport { IoMdClose } from 'react-icons/io';\nimport RecordButton from 'components/RecordButton';\nimport { Thread } from 'models';\nimport { setAudio } from 'redux/audios/actions';\nimport {\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport { AudioData } from 'utils/audioRecorder';\nimport classes from './styles.module.scss';\n\ninterface IAudioPlayerProps {\n  audioUrl: string;\n  activeThread: Thread | undefined;\n  setAudio: (audio?: AudioData) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<IAudioPlayerProps> = (props: IAudioPlayerProps) => {\n  const [isPlaying, setIsPlayingState] = useState<boolean>(false);\n\n  const audio = new Audio(props.audioUrl);\n  audio.addEventListener('ended', () => setIsPlayingState(false));\n\n  const playAudio = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (isPlaying) {\n      // TODO: cannot pause audio, fix needed\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlayingState(!isPlaying);\n  };\n\n  const removeAudio = () => {\n    props.setAudio();\n    props.embedRecordButton(true);\n    props.setShowRecordButtonState(true);\n  };\n\n  return (\n    <div className={classes['voice-player']}>\n      {props.audioUrl ? (\n        <div className={classes.control}>\n          <IconButton\n            className={classes.play}\n            aria-label=\"play\"\n            onClick={playAudio}\n          >\n            {isPlaying ? <FaPause /> : <FaPlay />}\n          </IconButton>\n\n          <div className={classes['wave-form']}>WaveForm</div>\n\n          <IconButton\n            className={classes.delete}\n            aria-label=\"delete\"\n            onClick={removeAudio}\n          >\n            <IoMdClose />\n          </IconButton>\n        </div>\n      ) : (\n        // TODO: capture global mouseup event and dispatch in RecordButton to trigger stopRecording\n        <RecordButton />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    activeThread: state.threads.activeThread\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setAudio: (audio?: AudioData) => dispatch(setAudio(audio)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import { firestore } from 'firebase';\n\nfunction getGeolocation() {\n  const { geolocation } = window.navigator;\n  // if (window.navigator.geolocation) {\n  if (geolocation) {\n    const getCurrentPositionPromise = () => {\n      return new Promise(\n        (resolve: PositionCallback, reject: PositionErrorCallback) => {\n          // window.navigator.geolocation.getCurrentPosition(resolve, reject);\n          geolocation.getCurrentPosition(resolve, reject);\n        }\n      );\n    };\n    return getCurrentPositionPromise();\n  } else {\n    console.log('Geolocation is not supported!'); /* tslint:disable-line */\n  }\n}\n\nfunction positionToGeoPoint(position: Position) {\n  const {\n    coords: { latitude, longitude }\n  } = position;\n  console.log({ latitude, longitude }); // tslint:disable-line\n  return new firestore.GeoPoint(latitude, longitude);\n}\n\nexport async function getGeoPoint() {\n  const position = await getGeolocation();\n  console.log({ position }); // tslint:disable-line\n  return position ? positionToGeoPoint(position) : undefined;\n}\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { IconButton } from '@material-ui/core';\nimport AudioPlayer from 'components/AudioPlayer';\nimport { RiFileAddLine } from 'react-icons/ri';\nimport { FaMusic, FaCheck } from 'react-icons/fa';\nimport { Thread, Voice } from 'models';\n// import { Thread } from 'models';\nimport { VoiceFormData } from 'redux/components/state';\nimport { IRootState, ThunkResult } from 'store';\nimport { createThread } from 'redux/threads/thunks';\nimport { connect } from 'react-redux';\nimport { AudioData } from 'utils/audioRecorder';\nimport { getTimestamp } from 'utils/time';\n// import { getGeolocation } from 'utils/geolocation';\nimport { getGeoPoint } from 'utils/geolocation';\nimport classes from './styles.module.scss';\n\ninterface IVoiceFormProps {\n  audio: AudioData | undefined;\n  thread?: Thread;\n  createThread: (newThread: Thread) => Promise<Thread | undefined>;\n}\n\nconst VoiceForm: React.FC<IVoiceFormProps> = (props: IVoiceFormProps) => {\n  const { register, handleSubmit } = useForm<VoiceFormData>();\n\n  const [value, setValue] = useState<string>(\n    props.thread ? props.thread.title : ''\n  );\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n\n  const submitVoice = async (voiceFormData: VoiceFormData) => {\n    console.log({ voiceFormData }); // tslint:disable-line\n    if (props.audio) {\n      const { threadTitle } = voiceFormData;\n\n      const timestamp = getTimestamp();\n      const location = await getGeoPoint();\n\n      if (!location) return console.log('Location is not available!'); /* tslint:disable-line */\n      let threadId = '';\n      if (!props.thread) {\n        const newThread: Thread = {\n          is_active: true,\n          title: threadTitle,\n          user_id: 'Z1aO565FJD1ZmaOqI9Mi', // TODO: replace hard coded user_id with logged in user.id from redux store\n          color_code: 'Y', // TODO: replace hard coded color_code with color_code state from redux store\n          bookmarked_by_users: [],\n          location,\n          timestamp\n        };\n\n        console.log({ newThread }); // tslint:disable-line\n        const thread = (await props.createThread(newThread)) as Thread;\n        threadId = thread.id as string;\n      } else {\n        threadId = props.thread.id as string;\n      }\n\n      const voice: Voice = {\n        is_active: true,\n        thread_id: threadId,\n        user_id: 'user_id',\n        voice_url: props.audio.audioUrl,\n        liked_by_users: [],\n        location,\n        timestamp\n      };\n\n      console.log({ voice }); // tslint:disable-line\n    } else {\n      console.log('No voice has been recorded yet!'); /* tslint:disable-line */\n    }\n  };\n\n  return (\n    <div className={classes['voice-form']}>\n      <div className={classes.container}>\n        <div className={classes.handle} />\n\n        <form\n          id=\"voice-form\"\n          className={classes.form}\n          onSubmit={handleSubmit(submitVoice)}\n        >\n          <ul className={classes.fields}>\n            {props.thread ? null : (\n              <li className={classes.field}>\n                <label className={classes.label} htmlFor=\"channel\">\n                  選擇版區：\n                </label>\n\n                <select\n                  className={classes.select}\n                  name=\"channel\"\n                  ref={register}\n                >\n                  <option className={classes.option} value=\"吹水台\">\n                    吹水台\n                  </option>\n                </select>\n              </li>\n            )}\n\n            <li className={classes.field}>\n              <label className={classes.label} htmlFor=\"thread\">\n                {`${props.thread ? '回應' : '新貼'}題目：`}\n              </label>\n\n              <input\n                className={classes.input}\n                name=\"threadTitle\"\n                ref={register({ required: true })}\n                type=\"text\"\n                value={value}\n                onChange={handleInput}\n                readOnly={Boolean(props.thread)}\n              />\n            </li>\n          </ul>\n\n          <AudioPlayer audioUrl={props.audio?.audioUrl as string} />\n\n          <div className={classes.control}>\n            <div className={classes.buttons}>\n              <IconButton className={classes.new} aria-label=\"new\">\n                <RiFileAddLine />\n              </IconButton>\n\n              <IconButton className={classes.music} aria-label=\"music\">\n                <FaMusic />\n              </IconButton>\n            </div>\n\n            <IconButton\n              className={classes.submit}\n              aria-label=\"submit\"\n              type=\"submit\"\n              form=\"voice-form\"\n            >\n              <FaCheck />\n            </IconButton>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    audio: state.audios.audio\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    createThread: (newThread: Thread) => dispatch(createThread(newThread))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoiceForm);\n","import { Dispatch } from 'redux';\nimport { Thread } from 'models';\nimport {\n  IThreadsAction,\n  loadThreadsSuccess,\n  createThreadSuccess,\n  failed\n} from './actions';\n\nconst { REACT_APP_API_SERVER } = process.env;\n\nexport function loadThreads() {\n  return async (dispatch: Dispatch<IThreadsAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/threads`, {\n      method: 'GET'\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadThreadsSuccess(data));\n    } else {\n      dispatch(failed('LOAD_THREADS_FAILED', data));\n    }\n  };\n}\n\nexport function createThread(newThread: Thread) {\n  return async (dispatch: Dispatch<IThreadsAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/threads`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json; charset=utf-8'\n      },\n      body: JSON.stringify(newThread)\n    });\n    const { isSuccess, data } = await res.json();\n\n    console.log({ isSuccess, data }); // tslint:disable-line\n    if (isSuccess) {\n      dispatch(createThreadSuccess(data));\n      return data as Thread;\n    } else {\n      dispatch(failed('CREATE_THREAD_FAILED', data));\n    }\n  };\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HeadNav from 'components/HeadNav';\nimport RecordButton from 'components/RecordButton';\nimport DrawerContainer from 'components/DrawerContainer';\nimport ThreadPanel from 'components/ThreadPanel';\nimport TimerBar from 'components/TimerBar';\nimport VoiceForm from 'components/VoiceForm';\nimport { Thread } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { DrawerState } from 'redux/components/state';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\nconst { REACT_APP_URL_PREFIX } = process.env;\n\ninterface IMainProps {\n  drawerState: DrawerState;\n  activeThread: Thread | undefined;\n  showRecordButton: boolean;\n  isRecording: boolean;\n}\n\nconst Main: React.FC<IMainProps> = (props: IMainProps) => {\n  return (\n    <div className={classes.main}>\n      <HeadNav />\n\n      {props.showRecordButton && <RecordButton />}\n\n      <DrawerContainer side=\"left\">\n        <p>drawer contents</p>\n      </DrawerContainer>\n\n      <DrawerContainer\n        side=\"bottom\"\n        disableSwipe={props.activeThread === undefined}\n      >\n        {props.isRecording ? (\n          <TimerBar />\n        ) : (\n          <Switch>\n            <Route\n              path={`${REACT_APP_URL_PREFIX}/threads/new`}\n              component={VoiceForm}\n            />\n\n            <Route\n              path={`${REACT_APP_URL_PREFIX}/threads/:id/new`}\n              children={<VoiceForm thread={props.activeThread} />}\n            />\n\n            <Route path={`${REACT_APP_URL_PREFIX}/`} component={ThreadPanel} />\n          </Switch>\n        )}\n      </DrawerContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    drawerState: state.components.drawerState,\n    activeThread: state.threads.activeThread,\n    showRecordButton: state.components.showRecordButton,\n    isRecording: state.audios.isRecording\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","export interface AudioData {\n  audioBlob: Blob;\n  audioUrl: string;\n}\n\nexport interface AudioRecorder {\n  start: () => void;\n  stop: () => Promise<AudioData>;\n}\n\nexport const audioRecorder = () =>\n  new Promise(async (resolve: (audioRecorder: AudioRecorder) => void) => {\n    const stream: MediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder: MediaRecorder = new MediaRecorder(stream);\n    let audioChunk: Blob | undefined;\n\n    const dataAvailableHandler = (event: BlobEvent) => {\n      audioChunk = event.data;\n    };\n\n    mediaRecorder.addEventListener(\n      'dataavailable',\n      dataAvailableHandler as EventListenerOrEventListenerObject\n    );\n\n    const start = () => mediaRecorder.start();\n\n    const stop = () =>\n      new Promise((resolve: (audioData: AudioData) => void) => {\n        const stopHandler: EventListenerOrEventListenerObject = () => {\n          const audioBlob = new Blob([audioChunk as Blob]);\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const audioData: AudioData = { audioBlob, audioUrl };\n          resolve(audioData);\n        };\n\n        mediaRecorder.addEventListener('stop', stopHandler);\n\n        mediaRecorder.stop();\n      });\n\n    const audioRecorder: AudioRecorder = { start, stop };\n    resolve(audioRecorder);\n  });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Map from 'components/Map';\nimport Main from 'components/Main';\nimport { IRootState, ThunkResult } from './store';\nimport { loadThreads } from 'redux/threads/thunks';\nimport { loadUsers } from 'redux/users/thunks';\nimport { audioRecorder, AudioRecorder } from 'utils/audioRecorder';\nimport { setRecorder } from 'redux/audios/actions';\nimport classes from './App.module.scss';\n\ninterface IAppProps {\n  loadThreads: () => void;\n  loadUsers: () => void;\n  setRecorder: (recorder?: AudioRecorder) => void;\n}\n\nconst App: React.FC<IAppProps> = (props: IAppProps) => {\n  const initializeRecorder = async () => {\n    const recorder = await audioRecorder();\n    props.setRecorder(recorder);\n  };\n\n  props.loadThreads();\n  props.loadUsers();\n\n  initializeRecorder();\n\n  return (\n    <div className={classes.app}>\n      <Map />\n      <Main />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    loadThreads: () => dispatch(loadThreads()),\n    loadUsers: () => dispatch(loadUsers()),\n    setRecorder: (recorder?: AudioRecorder) => dispatch(setRecorder(recorder))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { Dispatch } from 'redux';\nimport { IUsersAction, loadUsersSuccess, failed } from './actions';\n\nconst { REACT_APP_API_SERVER } = process.env;\n\nexport function loadUsers() {\n  return async (dispatch: Dispatch<IUsersAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/users`, {\n      method: 'GET'\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadUsersSuccess(data));\n    } else {\n      dispatch(failed('LOAD_USERS_FAILED', data));\n    }\n  };\n}\n","import { User } from 'models';\n\nexport function loadUsersSuccess(users: Array<User>) {\n  return {\n    type: 'LOAD_USERS' as 'LOAD_USERS',\n    users\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_USERS_FAILED';\n\ntype UsersActionCreators = typeof loadUsersSuccess | typeof failed;\n\nexport type IUsersAction = ReturnType<UsersActionCreators>;\n","import { IThreadsState } from './state';\nimport { IThreadsAction } from './actions';\nimport { Thread } from 'models';\n\nconst initialState: IThreadsState = {\n  threads: [],\n  activeThread: undefined,\n  threadPlaying: false\n};\n\nexport const threadsReducer = (\n  state: IThreadsState = initialState,\n  action: IThreadsAction\n): IThreadsState => {\n  switch (action.type) {\n    case 'LOAD_THREADS': {\n      const { threads } = action;\n      return {\n        ...state,\n        threads\n      };\n    }\n    case 'CREATE_THREAD': {\n      const { newThread } = action;\n      const threads: Array<Thread> = state.threads.concat(newThread);\n      return {\n        ...state,\n        threads\n      };\n    }\n    case 'SET_ACTIVE_THREAD': {\n      const { activeThread } = action;\n      return {\n        ...state,\n        activeThread\n      };\n    }\n    case 'TOGGLE_THREAD_PLAYING': {\n      const threadPlaying = !state.threadPlaying;\n      return {\n        ...state,\n        threadPlaying\n      };\n    }\n    case 'STOP_PLAYING_THREAD': {\n      return {\n        ...state,\n        threadPlaying: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { IVoicesState } from './state';\nimport { IVoicesAction } from './actions';\n\nconst initialState: IVoicesState = {\n  voices: []\n};\n\nexport const voicesReducer = (\n  state: IVoicesState = initialState,\n  action: IVoicesAction\n): IVoicesState => {\n  switch (action.type) {\n    case 'LOAD_VOICES':\n      const { voices } = action;\n      return {\n        ...state,\n        voices\n      };\n    default:\n      return state;\n  }\n};\n","import { IUsersState } from './state';\nimport { IUsersAction } from './actions';\n\nconst initialState: IUsersState = {\n  users: []\n};\n\nexport const usersReducer = (\n  state: IUsersState = initialState,\n  action: IUsersAction\n): IUsersState => {\n  switch (action.type) {\n    case 'LOAD_USERS':\n      const { users } = action;\n      return {\n        ...state,\n        users\n      };\n    default:\n      return state;\n  }\n};\n","import { IAudiosState } from './state';\nimport { IAudiosAction } from './actions';\n\nconst initialState: IAudiosState = {\n  recorder: undefined,\n  audio: undefined,\n  isRecording: false\n};\n\nexport const audiosReducer = (\n  state: IAudiosState = initialState,\n  action: IAudiosAction\n): IAudiosState => {\n  switch (action.type) {\n    case 'SET_RECORDER':\n      const { recorder } = action;\n      return {\n        ...state,\n        recorder\n      };\n    case 'SET_AUDIO':\n      const { audio } = action;\n      return {\n        ...state,\n        audio\n      };\n    case 'SET_IS_RECORDING_STATE':\n      const { isRecording } = action;\n      return {\n        ...state,\n        isRecording\n      };\n    default:\n      return state;\n  }\n};\n","import { IChannelsState } from './state';\nimport { IChannelsActions } from './actions';\n\nconst initialState: IChannelsState = {\n  channel: '吹水台'\n};\n\nexport const channelsReducer = (\n  state: IChannelsState = initialState,\n  action: IChannelsActions\n): IChannelsState => {\n  switch (action.type) {\n    case 'SET_CHANNEL':\n      const { channel } = action;\n      return {\n        ...state,\n        channel\n      };\n    default:\n      return state;\n  }\n};\n","import { IComponentsState } from 'redux/components/state';\nimport { IComponentsAction } from 'redux/components/actions';\n\nconst initialState: IComponentsState = {\n  showRecordButton: true,\n  showPlayList: false,\n  drawerState: {\n    top: false,\n    right: false,\n    bottom: false,\n    left: false\n  },\n  embeddedRecordButton: false\n};\n\nexport function componentsReducer(\n  state: IComponentsState = initialState,\n  action: IComponentsAction\n) {\n  switch (action.type) {\n    case 'SET_SHOW_RECORD_BUTTON_STATE':\n      const { showRecordButton } = action;\n      return {\n        ...state,\n        showRecordButton\n      };\n    case 'SET_SHOW_PLAY_LIST_STATE':\n      const { showPlayList } = action;\n      return {\n        ...state,\n        showPlayList\n      };\n    case 'SET_DRAWER_STATE':\n      const { side, open } = action;\n      const { drawerState } = state;\n      return {\n        ...state,\n        drawerState: {\n          ...drawerState,\n          [side]: open\n        }\n      };\n    case 'EMBED_RECORD_BUTTON':\n      const { embeddedRecordButton } = action;\n      return {\n        ...state,\n        embeddedRecordButton\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  compose,\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  Store\n} from 'redux';\nimport { createBrowserHistory } from 'history';\nimport {\n  RouterState,\n  connectRouter,\n  routerMiddleware\n} from 'connected-react-router';\nimport thunk, { ThunkDispatch } from 'redux-thunk';\nimport logger from 'redux-logger';\nimport { IThreadsState } from 'redux/threads/state';\nimport { IVoicesState } from 'redux/voices/state';\nimport { IUsersState } from 'redux/users/state';\nimport { IAudiosState } from 'redux/audios/state';\nimport { IChannelsState } from 'redux/channels/state';\nimport { IComponentsState } from 'redux/components/state';\nimport { IThreadsAction } from 'redux/threads/actions';\nimport { IVoicesAction } from 'redux/voices/actions';\nimport { IUsersAction } from 'redux/users/actions';\nimport { IAudiosAction } from 'redux/audios/actions';\nimport { IChannelsActions } from 'redux/channels/actions';\nimport { IComponentsAction } from 'redux/components/actions';\nimport { threadsReducer } from 'redux/threads/reducer';\nimport { voicesReducer } from 'redux/voices/reducer';\nimport { usersReducer } from 'redux/users/reducer';\nimport { audiosReducer } from 'redux/audios/reducer';\nimport { channelsReducer } from 'redux/channels/reducer';\nimport { componentsReducer } from 'redux/components/reducer';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n    getEventListeners: (element: any) => Array<any>;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createBrowserHistory();\n\nexport interface IRootState {\n  threads: IThreadsState;\n  voices: IVoicesState;\n  users: IUsersState;\n  audios: IAudiosState;\n  channels: IChannelsState;\n  components: IComponentsState;\n  router: RouterState;\n}\n\ntype IRootAction =\n  | IThreadsAction\n  | IVoicesAction\n  | IUsersAction\n  | IAudiosAction\n  | IChannelsActions\n  | IComponentsAction;\n\nconst rootReducer = combineReducers<IRootState>({\n  threads: threadsReducer,\n  voices: voicesReducer,\n  users: usersReducer,\n  audios: audiosReducer,\n  channels: channelsReducer,\n  components: componentsReducer,\n  router: connectRouter(history)\n});\n\nexport type ThunkResult = ThunkDispatch<IRootState, null, IRootAction>;\n\nconst store: Store<IRootState, IRootAction> = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(logger),\n    applyMiddleware(thunk),\n    applyMiddleware(routerMiddleware(history))\n  )\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport store, { history } from 'store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__ijZIq\",\"text-size-small\":\"styles_text-size-small__1lNhe\",\"text-size-normal\":\"styles_text-size-normal__3tbWC\",\"text-size-large\":\"styles_text-size-large__jaA8s\",\"text-size-larger\":\"styles_text-size-larger__3cF7A\",\"text-bold\":\"styles_text-bold__38hor\",\"text-uppercase\":\"styles_text-uppercase__xPWzx\",\"voice-form\":\"styles_voice-form__3gLiu\",\"container\":\"styles_container__zAavQ\",\"handle\":\"styles_handle__ZPzTV\",\"form\":\"styles_form__3CGWh\",\"fields\":\"styles_fields__1ASB4\",\"field\":\"styles_field__2_bzl\",\"label\":\"styles_label__lRzte\",\"select\":\"styles_select__3NPIu\",\"input\":\"styles_input__k9ZVB\",\"control\":\"styles_control__kds9w\",\"buttons\":\"styles_buttons__3vh4D\",\"new\":\"styles_new__v6Lj7\",\"music\":\"styles_music__3MWRH\",\"submit\":\"styles_submit__3y_fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__9ID4P\",\"text-size-small\":\"styles_text-size-small__EuMrL\",\"text-size-normal\":\"styles_text-size-normal__1OTia\",\"text-size-large\":\"styles_text-size-large__3vK1o\",\"text-size-larger\":\"styles_text-size-larger__28WhF\",\"text-bold\":\"styles_text-bold__lZla8\",\"text-uppercase\":\"styles_text-uppercase__bPdLp\",\"thread-panel\":\"styles_thread-panel__1kB56\",\"container\":\"styles_container__1lcW7\",\"handle\":\"styles_handle__226hH\",\"contents\":\"styles_contents__33G3C\",\"title\":\"styles_title__24vsv\",\"info\":\"styles_info__3NRDf\",\"control\":\"styles_control__252yp\",\"control-star\":\"styles_control-star__1c7pK\",\"control-share\":\"styles_control-share__Pds8-\",\"thread-previous\":\"styles_thread-previous__3lb-e\",\"thread-next\":\"styles_thread-next__1cawo\",\"thread-play\":\"styles_thread-play__2CtbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__2Z2H_\",\"text-size-small\":\"styles_text-size-small__IjZsk\",\"text-size-normal\":\"styles_text-size-normal__18x1M\",\"text-size-large\":\"styles_text-size-large__2qn5H\",\"text-size-larger\":\"styles_text-size-larger__1JRyu\",\"text-bold\":\"styles_text-bold__tZ_OT\",\"text-uppercase\":\"styles_text-uppercase___vsP3\",\"head-nav\":\"styles_head-nav__2AjrA\",\"nav-menu\":\"styles_nav-menu__2jGZn\",\"nav-search\":\"styles_nav-search__1ar0n\",\"switch\":\"styles_switch__E7v1U\",\"stage\":\"styles_stage__22-Cl\",\"stage-previous\":\"styles_stage-previous__2AVMx\",\"stage-next\":\"styles_stage-next__3YrgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__3CPzR\",\"text-size-small\":\"styles_text-size-small__39sOw\",\"text-size-normal\":\"styles_text-size-normal__39O6I\",\"text-size-large\":\"styles_text-size-large__kZVIY\",\"text-size-larger\":\"styles_text-size-larger__3d6xL\",\"text-bold\":\"styles_text-bold__2tYsD\",\"text-uppercase\":\"styles_text-uppercase__ESUnP\",\"voice-info\":\"styles_voice-info__2Dqfq\",\"profile\":\"styles_profile__3TdcI\",\"like\":\"styles_like__ZTv0n\",\"badge\":\"styles_badge__1ktpI\",\"info\":\"styles_info__9gAry\",\"date\":\"styles_date__1qg4x\",\"user\":\"styles_user__3DtHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__dLVMu\",\"text-size-small\":\"styles_text-size-small__1T3RC\",\"text-size-normal\":\"styles_text-size-normal__1JyEr\",\"text-size-large\":\"styles_text-size-large__1Sx-k\",\"text-size-larger\":\"styles_text-size-larger__2dcYQ\",\"text-bold\":\"styles_text-bold__33hvE\",\"text-uppercase\":\"styles_text-uppercase__XCFEW\",\"voice-player\":\"styles_voice-player__2kZum\",\"control\":\"styles_control__2-hO5\",\"play\":\"styles_play__3vUqD\",\"delete\":\"styles_delete__X0VW1\",\"wave-form\":\"styles_wave-form__1A4Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__19mQ2\",\"text-size-small\":\"styles_text-size-small__3PFkO\",\"text-size-normal\":\"styles_text-size-normal__30l_J\",\"text-size-large\":\"styles_text-size-large__2YLkK\",\"text-size-larger\":\"styles_text-size-larger__1CCYy\",\"text-bold\":\"styles_text-bold__1ke-k\",\"text-uppercase\":\"styles_text-uppercase__1FLP5\",\"map\":\"styles_map__3B7Q2\",\"tile-layer\":\"styles_tile-layer__1vgma\",\"icon\":\"styles_icon__3SXHt\",\"popup\":\"styles_popup__3EyS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__289PS\",\"text-size-small\":\"styles_text-size-small__3A4cv\",\"text-size-normal\":\"styles_text-size-normal__3kkF7\",\"text-size-large\":\"styles_text-size-large__3twJV\",\"text-size-larger\":\"styles_text-size-larger__3S1MH\",\"text-bold\":\"styles_text-bold__3S_vo\",\"text-uppercase\":\"styles_text-uppercase__38Dsw\",\"record-button\":\"styles_record-button__2zE4x\",\"floating\":\"styles_floating__1K0uC\",\"button\":\"styles_button__2Lhpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__QdQq8\",\"text-size-small\":\"styles_text-size-small__1ntVF\",\"text-size-normal\":\"styles_text-size-normal__1QG0Q\",\"text-size-large\":\"styles_text-size-large__60MzJ\",\"text-size-larger\":\"styles_text-size-larger__1NDP3\",\"text-bold\":\"styles_text-bold__2aWdQ\",\"text-uppercase\":\"styles_text-uppercase__2HQOU\",\"play-list\":\"styles_play-list__xoJ8L\",\"open\":\"styles_open__24lEQ\",\"voices\":\"styles_voices__32pWd\",\"voice\":\"styles_voice__lsVyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__Bb7dO\",\"text-size-small\":\"styles_text-size-small__29iPd\",\"text-size-normal\":\"styles_text-size-normal__1FFJy\",\"text-size-large\":\"styles_text-size-large__2NFd2\",\"text-size-larger\":\"styles_text-size-larger___t97M\",\"text-bold\":\"styles_text-bold__1Etxo\",\"text-uppercase\":\"styles_text-uppercase__1akFl\",\"drawer\":\"styles_drawer__2KdUm\",\"drawer-horizontal\":\"styles_drawer-horizontal__39eUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__2vnjx\",\"text-size-small\":\"styles_text-size-small__3BLTI\",\"text-size-normal\":\"styles_text-size-normal__3qJii\",\"text-size-large\":\"styles_text-size-large__1ze8J\",\"text-size-larger\":\"styles_text-size-larger__2z5Bx\",\"text-bold\":\"styles_text-bold__1qn8k\",\"text-uppercase\":\"styles_text-uppercase__2Z6AJ\",\"timer-bar\":\"styles_timer-bar__1Pml3\",\"timer\":\"styles_timer__1qpE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__1fi0Z\",\"text-size-small\":\"styles_text-size-small__PtZps\",\"text-size-normal\":\"styles_text-size-normal__MAOk3\",\"text-size-large\":\"styles_text-size-large__2FZ2E\",\"text-size-larger\":\"styles_text-size-larger__2EDnl\",\"text-bold\":\"styles_text-bold__37IFA\",\"text-uppercase\":\"styles_text-uppercase__36vkr\",\"main\":\"styles_main__3ZYez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};"],"sourceRoot":""}