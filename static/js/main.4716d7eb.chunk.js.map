{"version":3,"sources":["variables.ts","redux/threads/actions.ts","redux/components/actions.ts","redux/voices/actions.ts","redux/voices/thunks.ts","components/Map/constant.ts","components/Map/index.tsx","components/HeadNav/index.tsx","redux/audios/actions.ts","redux/geolocation/actions.ts","utils/geolocation.ts","components/RecordButton/index.tsx","components/DrawerContainer/index.tsx","utils/time.ts","components/VoiceInfo/index.tsx","components/PlayList/index.tsx","components/ThreadPanel/index.tsx","components/TimerBar/index.tsx","components/AudioPlayer/index.tsx","components/VoiceForm/index.tsx","redux/threads/thunks.ts","components/Main/index.tsx","utils/audioRecorder.ts","App.tsx","redux/users/thunks.ts","redux/users/actions.ts","redux/threads/reducer.ts","redux/voices/reducer.ts","redux/users/reducer.ts","redux/audios/reducer.ts","redux/geolocation/reducer.ts","redux/channels/reducer.ts","redux/components/reducer.ts","store.ts","serviceWorker.ts","index.tsx","components/VoiceForm/styles.module.scss","components/ThreadPanel/styles.module.scss","components/HeadNav/styles.module.scss","components/VoiceInfo/styles.module.scss","components/Map/styles.module.scss","components/AudioPlayer/styles.module.scss","components/RecordButton/styles.module.scss","components/PlayList/styles.module.scss","components/DrawerContainer/styles.module.scss","components/TimerBar/styles.module.scss","components/Main/styles.module.scss","App.module.scss"],"names":["process","REACT_APP_API_SERVER","REACT_APP_STADIA_MAP_API_KEY","REACT_APP_URL_PREFIX","createThreadSuccess","newThread","type","failed","msg","setShowRecordButtonState","showRecordButton","setShowPlayListState","showPlayList","setDrawerState","side","open","embedRecordButton","embeddedRecordButton","loadVoices","threadId","dispatch","a","fetch","method","res","json","isSuccess","data","voices","urlTemplate","options","center","zoom","zoomSnap","zoomDelta","zoomControl","doubleClickZoom","connect","state","activeThread","threads","drawerState","components","geolocation","setActiveThread","thread","stopPlayingThread","mapRef","useRef","layerRef","tempLayerRef","markerRef","useState","markers","setMarkers","history","useHistory","match","useRouteMatch","useEffect","container","L","DomUtil","get","_leaflet_id","tileLayer","className","classes","attribution","mapOptions","layers","current","map","layerGroup","addTo","clearLayers","icon","divIcon","forEach","position","latLng","location","_latitude","_longitude","popup","closeButton","pane","marker","bindPopup","on","event","target","pathname","id","push","flyTo","prevMarkers","params","find","isPopupOpen","openPopup","channel","channels","props","AppBar","Toolbar","IconButton","menu","edge","color","aria-label","onClick","left","ButtonGroup","switch","Button","prev","stage","next","search","setAudio","audio","setGeolocation","getGeolocation","window","navigator","Promise","resolve","reject","getCurrentPosition","console","log","positionToLocationJson","coords","latitude","longitude","getLocationJson","undefined","recorder","audios","isRecording","setIsRecordingState","useLocation","startRecording","replace","start","stopRecording","stop","clsx","floating","button","onMouseDown","onTouchStart","onMouseUp","onTouchEnd","onContextMenu","preventDefault","disableSwipe","children","toggleDrawer","key","bottom","SwipeableDrawer","anchor","disableSwipeToOpen","onClose","onOpen","drawer","sanitizedDate","timestampObj","_seconds","_nanoseconds","timestamp","firestore","Timestamp","moment","toDate","fromNow","getTimestampJson","milliseconds","Date","now","Math","floor","users","isPlaying","setIsPlayingState","audioElement","document","createElement","src","voice","voice_url","audioRef","profile","badge","user","user_id","split","followers","length","info","date","pause","play","prevIsPlaying","username","like","liked_by_users","idx","threadPlaying","toggleThreadPlaying","toggleShowPlayList","handle","contents","title","control","TimerBar","timer","Audio","audioUrl","addEventListener","delete","createThread","headers","body","JSON","stringify","createVoice","newVoice","audioBlob","voiceString","formData","FormData","append","useForm","register","handleSubmit","inputRef","value","setValue","submitVoice","voiceFormData","threadTitle","is_active","color_code","bookmarked_by_users","thread_id","focus","form","onSubmit","fields","field","label","htmlFor","select","name","ref","option","input","e","required","onChange","readOnly","Boolean","buttons","new","music","submit","main","path","component","ThreadPanel","loadThreads","loadUsers","setRecorder","initializeRecorder","mediaDevices","getUserMedia","stream","mediaRecorder","MediaRecorder","dataAvailableHandler","audioChunk","Blob","URL","createObjectURL","app","initialState","top","right","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createBrowserHistory","rootReducer","combineReducers","action","concat","router","connectRouter","store","createStore","applyMiddleware","thunk","routerMiddleware","hostname","ReactDOM","render","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4716d7eb.chunk.js","sourcesContent":["export const {\n  REACT_APP_API_SERVER,\n  REACT_APP_STADIA_MAP_API_KEY,\n  REACT_APP_URL_PREFIX\n} = process.env;\n","import { ThreadJson } from 'models';\n\nexport function loadThreadsSuccess(threads: Array<ThreadJson>) {\n  return {\n    type: 'LOAD_THREADS' as 'LOAD_THREADS',\n    threads\n  };\n}\n\nexport function createThreadSuccess(newThread: ThreadJson) {\n  return {\n    type: 'CREATE_THREAD' as 'CREATE_THREAD',\n    newThread\n  };\n}\n\nexport function setActiveThread(activeThread: ThreadJson | null) {\n  return {\n    type: 'SET_ACTIVE_THREAD' as 'SET_ACTIVE_THREAD',\n    activeThread\n  };\n}\n\nexport function toggleThreadPlaying() {\n  return {\n    type: 'TOGGLE_THREAD_PLAYING' as 'TOGGLE_THREAD_PLAYING'\n  };\n}\n\nexport function stopPlayingThread() {\n  return {\n    type: 'STOP_PLAYING_THREAD' as 'STOP_PLAYING_THREAD'\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_THREADS_FAILED' | 'CREATE_THREAD_FAILED';\n\ntype ThreadsActionCreators =\n  | typeof loadThreadsSuccess\n  | typeof createThreadSuccess\n  | typeof setActiveThread\n  | typeof toggleThreadPlaying\n  | typeof stopPlayingThread\n  | typeof failed;\n\nexport type IThreadsAction = ReturnType<ThreadsActionCreators>;\n","import { DrawerSide } from 'redux/components/state';\n\nexport function setShowRecordButtonState(showRecordButton: boolean) {\n  return {\n    type: 'SET_SHOW_RECORD_BUTTON_STATE' as 'SET_SHOW_RECORD_BUTTON_STATE',\n    showRecordButton\n  };\n}\n\nexport function setShowPlayListState(showPlayList: boolean) {\n  return {\n    type: 'SET_SHOW_PLAY_LIST_STATE' as 'SET_SHOW_PLAY_LIST_STATE',\n    showPlayList\n  };\n}\n\nexport function setDrawerState(side: DrawerSide, open: boolean) {\n  return {\n    type: 'SET_DRAWER_STATE' as 'SET_DRAWER_STATE',\n    side,\n    open\n  };\n}\n\nexport function embedRecordButton(embeddedRecordButton: boolean) {\n  return {\n    type: 'EMBED_RECORD_BUTTON' as 'EMBED_RECORD_BUTTON',\n    embeddedRecordButton\n  };\n}\n\ntype ComponentsActionCreators =\n  | typeof setShowRecordButtonState\n  | typeof setShowPlayListState\n  | typeof setDrawerState\n  | typeof embedRecordButton;\n\nexport type IComponentsAction = ReturnType<ComponentsActionCreators>;\n","import { VoiceJson } from 'models';\n\nexport function loadVoicesSuccess(voices: Array<VoiceJson>) {\n  return {\n    type: 'LOAD_VOICES' as 'LOAD_VOICES',\n    voices\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_VOICES_FAILED' | 'CREATE_VOICE_FAILED';\n\ntype VoicesActionCreators = typeof loadVoicesSuccess | typeof failed;\n\nexport type IVoicesAction = ReturnType<VoicesActionCreators>;\n","import { Dispatch } from 'redux';\nimport { VoiceJson } from 'models';\nimport { REACT_APP_API_SERVER } from 'variables';\nimport { IVoicesAction, loadVoicesSuccess, failed } from './actions';\n\nexport function loadVoices(threadId: string) {\n  return async (dispatch: Dispatch<IVoicesAction>) => {\n    const res = await fetch(\n      `${REACT_APP_API_SERVER}/voices?thread_id=${threadId}`,\n      { method: 'GET' }\n    );\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadVoicesSuccess(data));\n    } else {\n      dispatch(failed('LOAD_VOICES_FAILED', data));\n    }\n  };\n}\n\nexport function createVoice(newVoice: VoiceJson, audioBlob: Blob) {\n  const voiceString = JSON.stringify(newVoice);\n  const formData = new FormData();\n  formData.append('voice_string', voiceString);\n  formData.append('audio_blob', audioBlob);\n\n  return async (dispatch: Dispatch<IVoicesAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/voices`, {\n      method: 'POST',\n      body: formData\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      return data as VoiceJson;\n    } else {\n      dispatch(failed('CREATE_VOICE_FAILED', data));\n    }\n  };\n}\n","import L from 'leaflet';\nimport { REACT_APP_STADIA_MAP_API_KEY } from 'variables';\n\nconst tsimShaTsuiLatLng: [number, number] = [22.2988, 114.1722];\n\nexport const urlTemplate: string = `https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png?api_key=${REACT_APP_STADIA_MAP_API_KEY}`;\n\nexport const attribution: string = `\n  &copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>,\n  &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a>\n  &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a>\n  contributors\n`;\n\nexport const options: L.MapOptions = {\n  center: tsimShaTsuiLatLng,\n  zoom: 12,\n  zoomSnap: 0.1,\n  zoomDelta: 0.5,\n  zoomControl: false,\n  doubleClickZoom: false\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory, useRouteMatch } from 'react-router';\nimport L from 'leaflet';\nimport { ThreadJson, LocationJson } from 'models';\nimport { REACT_APP_URL_PREFIX } from 'variables';\nimport { DrawerSide } from 'redux/components/state';\nimport { IRootState, ThunkResult } from 'store';\nimport { setActiveThread, stopPlayingThread } from 'redux/threads/actions';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  setShowPlayListState\n} from 'redux/components/actions';\nimport { loadVoices } from 'redux/voices/thunks';\nimport { connect } from 'react-redux';\nimport { urlTemplate, attribution, options } from './constant';\nimport classes from './styles.module.scss';\n\ninterface IMapProps {\n  activeThread: ThreadJson | null;\n  threads: Array<ThreadJson>;\n  geolocation: LocationJson | undefined;\n  setActiveThread: (thread: ThreadJson | null) => void;\n  loadVoices: (threadId: string) => void;\n  stopPlayingThread: () => void;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  setShowPlayListState: (showPlayList: boolean) => void;\n}\n\ninterface ThreadRouteParam {\n  threadId: string;\n}\n\ninterface MarkersMap {\n  [threadId: string]: L.Marker;\n}\n\nconst Map: React.FC<IMapProps> = ({\n  activeThread,\n  threads,\n  geolocation,\n  setActiveThread, /* tslint:disable-line */\n  loadVoices, /* tslint:disable-line */\n  stopPlayingThread, /* tslint:disable-line */\n  setDrawerState, /* tslint:disable-line */\n  setShowRecordButtonState, /* tslint:disable-line */\n  setShowPlayListState /* tslint:disable-line */\n}: IMapProps) => {\n  const mapRef: React.MutableRefObject<L.Map | null> = useRef(null);\n  const layerRef: React.MutableRefObject<L.LayerGroup | null> = useRef(null);\n  const tempLayerRef: React.MutableRefObject<L.LayerGroup | null> = useRef(null);\n  const markerRef: React.MutableRefObject<L.Marker | null> = useRef(null);\n\n  const [markers, setMarkers] = useState<MarkersMap>({});\n  const history = useHistory();\n  const match = useRouteMatch(`${REACT_APP_URL_PREFIX}/threads/:threadId`);\n\n  /* initialize map and add tile layer */\n  useEffect(() => {\n    const container = L.DomUtil.get('map');\n    if (container) {\n      (container as any)._leaflet_id = null;\n    }\n\n    const tileLayer: L.TileLayer = L.tileLayer(urlTemplate, {\n      className: classes['tile-layer'],\n      attribution\n    });\n\n    const mapOptions: L.MapOptions = { ...options, layers: [tileLayer] };\n    mapRef.current = L.map('map', mapOptions);\n\n    /* create layer group */\n    layerRef.current = L.layerGroup().addTo(mapRef.current as L.Map);\n    tempLayerRef.current = L.layerGroup().addTo(mapRef.current as L.Map);\n  }, []);\n\n  /* create thread popups and markers */\n  useEffect(() => {\n    (layerRef.current as L.LayerGroup).clearLayers();\n    const icon: L.DivIcon = L.divIcon({ className: classes.thread });\n\n    threads.forEach(thread => {\n      const position = L.latLng([\n        thread.location._latitude,\n        thread.location._longitude\n      ]);\n\n      const popup: L.Popup = L.popup({\n        className: classes.popup,\n        closeButton: false,\n        pane: 'shadowPane' /* avoid masking other markers */\n      });\n\n      const markerOnMousedownHandler = (event: L.LeafletEvent) => {\n        markerRef.current = event.target as L.Marker;\n        const pathname = `${REACT_APP_URL_PREFIX}/threads/${thread.id}`;\n        history.push(pathname);\n      };\n\n      const popupOpenHandler = () => {\n        (mapRef.current as L.Map).flyTo(position);\n        setShowPlayListState(false);\n        setShowRecordButtonState(false);\n        setDrawerState('bottom', true);\n      };\n\n      const popupCloseHandler = () => {\n        markerRef.current = null;\n        setShowRecordButtonState(true);\n        setDrawerState('bottom', false);\n        const pathname = REACT_APP_URL_PREFIX as string;\n        history.push(pathname);\n      };\n\n      const marker = L.marker(position, { icon })\n        .bindPopup(popup)\n        .on('mousedown', markerOnMousedownHandler)\n        .on('popupopen', popupOpenHandler)\n        .on('popupclose', popupCloseHandler)\n        .addTo(layerRef.current as L.LayerGroup);\n\n      setMarkers(prevMarkers => ({\n        ...prevMarkers,\n        [thread.id as string]: marker\n      }));\n    });\n  }, [\n    threads,\n    history,\n    setActiveThread,\n    setDrawerState,\n    setShowRecordButtonState,\n    setShowPlayListState\n  ]);\n\n  /* create new thread marker */\n  useEffect(() => {\n    if (geolocation) {\n      const icon: L.DivIcon = L.divIcon({ className: classes['new-thread'] });\n      const position = L.latLng([\n        geolocation._latitude,\n        geolocation._longitude\n      ]);\n\n      markerRef.current = L.marker(position, { icon }).addTo(\n        tempLayerRef.current as L.LayerGroup\n      );\n\n      (mapRef.current as L.Map).flyTo(position);\n    } else if (tempLayerRef.current) {\n      tempLayerRef.current.clearLayers();\n    }\n  }, [geolocation]);\n\n  /* monitor route to check if it matches /threads/:threadId or /threads/:threadId/new */\n  useEffect(() => {\n    if (match) {\n      const { threadId } = match.params as ThreadRouteParam;\n      const thread = threads.find(thread => thread.id === threadId);\n      stopPlayingThread();\n      if (thread) {\n        setActiveThread(thread);\n      } else {\n        setActiveThread(null);\n      }\n    } else {\n      setActiveThread(null);\n    }\n  }, [match, threads, stopPlayingThread, setActiveThread]);\n\n  useEffect(() => {\n    if (activeThread) {\n      loadVoices(activeThread.id as string);\n      markerRef.current = markers[activeThread.id as string];\n\n      const isPopupOpen = markerRef.current.isPopupOpen();\n      if (!isPopupOpen) {\n        markerRef.current.openPopup();\n      }\n    }\n  }, [activeThread, markers, loadVoices]);\n\n  return <div id=\"map\" className={classes.map} />;\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    activeThread: state.threads.activeThread,\n    threads: state.threads.threads,\n    drawerState: state.components.drawerState,\n    geolocation: state.geolocation.geolocation\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setActiveThread: (thread: ThreadJson | null) =>\n      dispatch(setActiveThread(thread)),\n    loadVoices: (threadId: string) => dispatch(loadVoices(threadId)),\n    stopPlayingThread: () => dispatch(stopPlayingThread()),\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    setShowPlayListState: (showPlayList: boolean) =>\n      dispatch(setShowPlayListState(showPlayList))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Map);\n","import React from 'react';\nimport {\n  AppBar,\n  Toolbar,\n  IconButton,\n  ButtonGroup,\n  Button\n} from '@material-ui/core';\nimport { FiSearch } from 'react-icons/fi';\nimport {\n  MdFormatListBulleted,\n  MdChevronLeft,\n  MdChevronRight\n} from 'react-icons/md';\nimport { ThunkResult, IRootState } from 'store';\nimport { DrawerSide, DrawerState } from 'redux/components/state';\nimport {\n  setDrawerState,\n  setShowRecordButtonState\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IHeadNavProps {\n  channel: string;\n  drawerState: DrawerState;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n}\n\nconst HeadNav: React.FC<IHeadNavProps> = (props: IHeadNavProps) => {\n  const toggleLeftDrawer = () => {\n    const open = !props.drawerState.left;\n    props.setShowRecordButtonState(!open);\n    props.setDrawerState('left', open);\n  };\n\n  return (\n    <AppBar className={classes['head-nav']} position=\"absolute\">\n      <Toolbar>\n        <IconButton\n          className={`${classes.menu} ${classes['nav-menu']}`}\n          edge=\"start\"\n          color=\"inherit\"\n          aria-label=\"menu\"\n          onClick={toggleLeftDrawer}\n        >\n          <MdFormatListBulleted />\n        </IconButton>\n\n        <ButtonGroup className={classes.switch}>\n          <Button\n            className={`${classes.prev} ${classes['stage-previous']}`}\n            aria-label=\"previous\"\n          >\n            <MdChevronLeft />\n          </Button>\n\n          <Button className={classes.stage} color=\"inherit\">\n            {props.channel}\n          </Button>\n\n          <Button\n            className={`${classes.next} ${classes['stage-next']}`}\n            aria-label=\"next\"\n          >\n            <MdChevronRight />\n          </Button>\n        </ButtonGroup>\n\n        <IconButton\n          className={`${classes.search} ${classes['nav-search']}`}\n          edge=\"end\"\n          color=\"inherit\"\n          aria-label=\"search\"\n        >\n          <FiSearch />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    channel: state.channels.channel,\n    drawerState: state.components.drawerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HeadNav);\n","import { AudioRecorder, AudioData } from 'utils/audioRecorder';\n\nexport function setRecorder(recorder?: AudioRecorder) {\n  return {\n    type: 'SET_RECORDER' as 'SET_RECORDER',\n    recorder\n  };\n}\n\nexport function setAudio(audio?: AudioData) {\n  return {\n    type: 'SET_AUDIO' as 'SET_AUDIO',\n    audio\n  };\n}\n\nexport function setIsRecordingState(isRecording: boolean) {\n  return {\n    type: 'SET_IS_RECORDING_STATE' as 'SET_IS_RECORDING_STATE',\n    isRecording\n  };\n}\n\ntype AudiosActionCreators =\n  | typeof setRecorder\n  | typeof setAudio\n  | typeof setIsRecordingState;\n\nexport type IAudiosAction = ReturnType<AudiosActionCreators>;\n","import { LocationJson } from 'models';\n\nexport function setGeolocation(geolocation?: LocationJson) {\n  return {\n    type: 'SET_GEOLOCATION' as 'SET_GEOLOCATION',\n    geolocation\n  };\n}\n\ntype GeolocationActionCreators = typeof setGeolocation;\n\nexport type IGeolocationAction = ReturnType<GeolocationActionCreators>;\n","function getGeolocation() {\n  const { geolocation } = window.navigator;\n  if (geolocation) {\n    const getCurrentPositionPromise = () => {\n      return new Promise(\n        (resolve: PositionCallback, reject: PositionErrorCallback) => {\n          geolocation.getCurrentPosition(resolve, reject);\n        }\n      );\n    };\n    return getCurrentPositionPromise();\n  } else {\n    console.log('Geolocation is not supported!'); /* tslint:disable-line */\n  }\n}\n\nfunction positionToLocationJson(position: Position) {\n  const {\n    coords: { latitude, longitude }\n  } = position;\n  const location = {\n    _latitude: latitude,\n    _longitude: longitude\n  };\n  return location;\n}\n\nexport async function getLocationJson() {\n  const position = await getGeolocation();\n  return position ? positionToLocationJson(position) : undefined;\n}\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport clsx from 'clsx';\nimport { IconButton } from '@material-ui/core';\nimport { ThreadJson, LocationJson } from 'models';\nimport { REACT_APP_URL_PREFIX } from 'variables';\nimport { DrawerSide } from 'redux/components/state';\nimport { IRootState, ThunkResult } from 'store';\nimport { setAudio, setIsRecordingState } from 'redux/audios/actions';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { setGeolocation } from 'redux/geolocation/actions';\nimport { connect } from 'react-redux';\nimport { AudioData, AudioRecorder } from 'utils/audioRecorder';\nimport { getLocationJson } from 'utils/geolocation';\nimport classes from './styles.module.scss';\n\ninterface IRecordButtonProps {\n  recorder: AudioRecorder | undefined;\n  isRecording: boolean;\n  activeThread: ThreadJson | null;\n  showRecordButton: boolean;\n  embeddedRecordButton: boolean;\n  setAudio: (audio?: AudioData) => void;\n  setIsRecordingState: (isRecording: boolean) => void;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n  setGeolocation: (geolocation?: LocationJson) => void;\n}\n\nconst RecordButton: React.FC<IRecordButtonProps> = (\n  props: IRecordButtonProps\n) => {\n  const history = useHistory();\n  const location = useLocation();\n\n  const startRecording = () => {\n    if (props.recorder && !props.isRecording) {\n      props.setGeolocation();\n      const pathname = location.pathname.replace('/new', '');\n      history.push(pathname);\n      props.setDrawerState('bottom', true);\n      props.recorder.start();\n      props.setIsRecordingState(true);\n      props.embedRecordButton(false);\n    } else {\n      console.log('recorder is not ready!'); /* tslint:disable-line */\n    }\n  };\n\n  const stopRecording = async () => {\n    if (props.isRecording) {\n      const audio = await props.recorder?.stop();\n      props.setAudio(audio as AudioData);\n      props.setIsRecordingState(false);\n      const pathname = `${\n        props.activeThread\n          ? location.pathname\n          : `${REACT_APP_URL_PREFIX}/threads`\n      }/new`;\n      history.push(pathname);\n      props.setShowRecordButtonState(false);\n\n      const geolocation = await getLocationJson();\n      props.setGeolocation(geolocation);\n    } else {\n      console.log('no audio is being recorded'); /* tslint:disable-line */\n    }\n  };\n\n  /* disable context menu from long press event in mobile or tablet devices */\n  const disableContextMenu = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => event.preventDefault();\n\n  return (\n    <div\n      className={clsx({\n        [classes['record-button']]: true,\n        [classes.floating]: !props.embeddedRecordButton\n      })}\n    >\n      <IconButton\n        id=\"record\"\n        className={classes.button}\n        aria-label=\"record\"\n        onMouseDown={startRecording}\n        onTouchStart={startRecording}\n        onMouseUp={stopRecording}\n        onTouchEnd={stopRecording}\n        onContextMenu={disableContextMenu}\n      >\n        {props.embeddedRecordButton ? '開始錄' : '9up'}\n      </IconButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    recorder: state.audios.recorder,\n    isRecording: state.audios.isRecording,\n    activeThread: state.threads.activeThread,\n    showRecordButton: state.components.showRecordButton,\n    embeddedRecordButton: state.components.embeddedRecordButton\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setAudio: (audio?: AudioData) => dispatch(setAudio(audio)),\n    setIsRecordingState: (isRecording: boolean) =>\n      dispatch(setIsRecordingState(isRecording)),\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton)),\n    setGeolocation: (geolocation?: LocationJson) =>\n      dispatch(setGeolocation(geolocation))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RecordButton);\n","import React, { useEffect } from 'react';\nimport clsx from 'clsx';\nimport { SwipeableDrawer } from '@material-ui/core';\nimport { LocationJson } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { DrawerSide, DrawerState } from 'redux/components/state';\nimport {\n  setDrawerState,\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { setGeolocation } from 'redux/geolocation/actions';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IDrawerContainerProps {\n  side: DrawerSide;\n  drawerState: DrawerState;\n  disableSwipe?: boolean;\n  children: React.ReactNode;\n  setDrawerState: (side: DrawerSide, open: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n  setGeolocation: (geolocation?: LocationJson) => void;\n}\n\nconst DrawerContainer: React.FC<IDrawerContainerProps> = ({\n  side,\n  drawerState,\n  disableSwipe,\n  children,\n  setDrawerState,\n  setShowRecordButtonState,\n  embedRecordButton,\n  setGeolocation\n}: IDrawerContainerProps) => {\n  const toggleDrawer = (side: DrawerSide, open: boolean) => (\n    event: React.KeyboardEvent | React.MouseEvent\n  ) => {\n    if (\n      event &&\n      event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setShowRecordButtonState(!open);\n    setDrawerState(side, open);\n    embedRecordButton(open); /* reset RecordButton */\n  };\n\n  useEffect(() => {\n    if (!drawerState.bottom) {\n      setGeolocation();\n    }\n  }, [drawerState.bottom, setGeolocation]);\n\n  return (\n    <SwipeableDrawer\n      anchor={side}\n      open={drawerState[side]}\n      disableSwipeToOpen={disableSwipe}\n      onClose={toggleDrawer(side, false)}\n      onOpen={toggleDrawer(side, true)}\n      className={clsx({\n        [classes.drawer]: true,\n        [classes['drawer-horizontal']]: side === 'left' || side === 'right'\n      })}\n    >\n      {children}\n    </SwipeableDrawer>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    drawerState: state.components.drawerState\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setDrawerState: (side: DrawerSide, open: boolean) =>\n      dispatch(setDrawerState(side, open)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton)),\n    setGeolocation: (geolocation?: LocationJson) =>\n      dispatch(setGeolocation(geolocation))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DrawerContainer);\n","import { firestore } from 'firebase';\nimport moment from 'moment';\n\nexport function sanitizedDate(timestampObj: {\n  _seconds: number;\n  _nanoseconds: number;\n}) {\n  const { _seconds, _nanoseconds } = timestampObj;\n  const timestamp = new firestore.Timestamp(_seconds, _nanoseconds);\n  return moment(timestamp.toDate()).fromNow();\n}\n\nexport function getTimestampJson() {\n  const milliseconds = Date.now();\n  const _seconds = Math.floor(milliseconds / 1000);\n  const _nanoseconds = (milliseconds - _seconds * 1000) * 1000000;\n  const timestamp = { _seconds, _nanoseconds };\n  return timestamp;\n}\n","import React, { useRef, useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FaUserPlus, FaRegHeart } from 'react-icons/fa';\nimport { VoiceJson, User } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport { sanitizedDate } from 'utils/time';\nimport classes from './styles.module.scss';\n\ninterface IVoiceInfoProps {\n  voice: VoiceJson;\n  users: Array<User>;\n}\n\nconst VoiceInfo: React.FC<IVoiceInfoProps> = (props: IVoiceInfoProps) => {\n  const [isPlaying, setIsPlayingState] = useState<boolean>(false);\n\n  const audioElement = document.createElement('audio');\n  audioElement.src = props.voice.voice_url;\n  const audioRef = useRef(audioElement);\n\n  const playOrPauseAudio = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n    } else {\n      audioRef.current.play();\n    }\n    setIsPlayingState(prevIsPlaying => !prevIsPlaying);\n  };\n\n  return (\n    <div className={classes['voice-info']}>\n      <IconButton className={classes.profile} aria-label=\"profile\">\n        <FaUserPlus />\n\n        <span className={classes.badge}>\n          {\n            props.users.find(\n              user => user.id === props.voice.user_id.split('/')[1]\n            )?.followers?.length\n          }\n          +\n        </span>\n      </IconButton>\n\n      <div className={classes.info}>\n        <p className={classes.date}>\n          {sanitizedDate(props.voice.timestamp as any)}\n        </p>\n\n        <h3 className={classes.user} onClick={playOrPauseAudio}>\n          {\n            props.users.find(\n              user => user.id === props.voice.user_id.split('/')[1]\n            )?.username\n          }\n        </h3>\n      </div>\n\n      <IconButton className={classes.like} aria-label=\"like\">\n        <FaRegHeart />\n\n        <span className={classes.badge}>\n          {props.voice.liked_by_users.length}+\n        </span>\n      </IconButton>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    users: state.users.users\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoiceInfo);\n","import React from 'react';\nimport clsx from 'clsx';\nimport VoiceInfo from 'components/VoiceInfo';\nimport { VoiceJson } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IPlayListProps {\n  open: boolean;\n  voices: Array<VoiceJson>;\n}\n\nconst PlayList: React.FC<IPlayListProps> = (props: IPlayListProps) => {\n  return (\n    <div\n      className={clsx({\n        [classes['play-list']]: true,\n        [classes.open]: props.open\n      })}\n    >\n      <ul className={classes.voices}>\n        {props.voices.map((voice, idx) => (\n          <li key={idx}>\n            <VoiceInfo voice={voice} />\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    voices: state.voices.voices\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PlayList);\n","import React from 'react';\nimport PlayList from 'components/PlayList';\nimport { IconButton } from '@material-ui/core';\nimport { FaRegStar, FaPlay, FaPause } from 'react-icons/fa';\nimport { MdSkipPrevious, MdSkipNext } from 'react-icons/md';\nimport { FiShare } from 'react-icons/fi';\nimport { ThreadJson, User, VoiceJson } from 'models';\nimport { IRootState, ThunkResult } from 'store';\nimport { toggleThreadPlaying } from 'redux/threads/actions';\nimport {\n  setShowPlayListState,\n  setShowRecordButtonState\n} from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport { sanitizedDate } from 'utils/time';\nimport classes from './styles.module.scss';\n\ninterface IThreadPanelProps {\n  activeThread: ThreadJson | null;\n  users: Array<User>;\n  voices: Array<VoiceJson>;\n  threadPlaying: boolean;\n  showPlayList: boolean;\n  toggleThreadPlaying: () => void;\n  setShowPlayListState: (showPlayList: boolean) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n}\n\nconst ThreadPanel: React.FC<IThreadPanelProps> = (props: IThreadPanelProps) => {\n  const toggleShowPlayList = () => {\n    const showPlayList = !props.showPlayList;\n    props.setShowPlayListState(showPlayList);\n    props.setShowRecordButtonState(showPlayList);\n  };\n\n  const playOrPauseThread = () => {\n    props.setShowPlayListState(true);\n    props.setShowRecordButtonState(true);\n    props.toggleThreadPlaying();\n  };\n\n  return (\n    <div className={classes['thread-panel']}>\n      {props.activeThread && (\n        <div className={classes.container}>\n          <div className={classes.handle} onClick={toggleShowPlayList} />\n\n          <div className={classes.contents}>\n            <h2 className={classes.title} onClick={toggleShowPlayList}>\n              {props.activeThread.title}\n            </h2>\n\n            <p className={classes.info}>\n              {\n                props.users.find(\n                  user => user.id === props.activeThread?.user_id!.split('/')[1]\n                )?.username\n              }\n              ・{sanitizedDate(props.activeThread.timestamp as any)}\n            </p>\n\n            <div className={classes.control}>\n              <IconButton\n                className={classes['control-star']}\n                color=\"inherit\"\n                aria-label=\"star\"\n              >\n                <FaRegStar />\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-previous']}\n                color=\"inherit\"\n                aria-label=\"previous\"\n              >\n                <MdSkipPrevious />\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-play']}\n                color=\"inherit\"\n                aria-label=\"play\"\n                onClick={playOrPauseThread}\n              >\n                {props.threadPlaying ? <FaPause /> : <FaPlay />}\n              </IconButton>\n\n              <IconButton\n                className={classes['thread-next']}\n                color=\"inherit\"\n                aria-label=\"next\"\n              >\n                <MdSkipNext />\n              </IconButton>\n\n              <IconButton\n                className={classes['control-share']}\n                color=\"inherit\"\n                aria-label=\"share\"\n              >\n                <FiShare />\n              </IconButton>\n            </div>\n\n            <PlayList open={props.showPlayList} />\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    activeThread: state.threads.activeThread,\n    users: state.users.users,\n    voices: state.voices.voices,\n    threadPlaying: state.threads.threadPlaying,\n    showPlayList: state.components.showPlayList\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    toggleThreadPlaying: () => dispatch(toggleThreadPlaying()),\n    setShowPlayListState: (showPlayList: boolean) =>\n      dispatch(setShowPlayListState(showPlayList)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ThreadPanel);\n","import React from 'react';\nimport classes from './styles.module.scss';\n\nconst TimerBar: React.FC = () => {\n  return (\n    <div className={classes['timer-bar']}>\n      <h2 className={classes.timer}>00:00</h2>\n    </div>\n  );\n};\n\nexport default TimerBar;\n","import React, { useState } from 'react';\nimport { IconButton } from '@material-ui/core';\nimport { FaPlay, FaPause } from 'react-icons/fa';\nimport { IoMdClose } from 'react-icons/io';\nimport RecordButton from 'components/RecordButton';\nimport { setAudio } from 'redux/audios/actions';\nimport {\n  setShowRecordButtonState,\n  embedRecordButton\n} from 'redux/components/actions';\nimport { IRootState, ThunkResult } from 'store';\nimport { connect } from 'react-redux';\nimport { AudioData } from 'utils/audioRecorder';\nimport classes from './styles.module.scss';\n\ninterface IAudioPlayerProps {\n  audioUrl: string;\n  setAudio: (audio?: AudioData) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n  embedRecordButton: (embeddedRecordButton: boolean) => void;\n}\n\nconst AudioPlayer: React.FC<IAudioPlayerProps> = (props: IAudioPlayerProps) => {\n  const [isPlaying, setIsPlayingState] = useState<boolean>(false);\n\n  const audio = new Audio(props.audioUrl);\n  audio.addEventListener('ended', () => setIsPlayingState(false));\n\n  const playAudio = (\n    event: React.MouseEvent<HTMLButtonElement, MouseEvent>\n  ) => {\n    if (isPlaying) {\n      // TODO: cannot pause audio, fix needed\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlayingState(!isPlaying);\n  };\n\n  const removeAudio = () => {\n    props.setAudio();\n    props.embedRecordButton(true);\n    props.setShowRecordButtonState(true);\n  };\n\n  return (\n    <div className={classes['voice-player']}>\n      {props.audioUrl ? (\n        <div className={classes.control}>\n          <IconButton\n            className={classes.play}\n            aria-label=\"play\"\n            onClick={playAudio}\n          >\n            {isPlaying ? <FaPause /> : <FaPlay />}\n          </IconButton>\n\n          <div className={classes['wave-form']}>WaveForm</div>\n\n          <IconButton\n            className={classes.delete}\n            aria-label=\"delete\"\n            onClick={removeAudio}\n          >\n            <IoMdClose />\n          </IconButton>\n        </div>\n      ) : (\n        // TODO: capture global mouseup event and dispatch in RecordButton to trigger stopRecording\n        <RecordButton />\n      )}\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    setAudio: (audio?: AudioData) => dispatch(setAudio(audio)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton)),\n    embedRecordButton: (embeddedRecordButton: boolean) =>\n      dispatch(embedRecordButton(embeddedRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AudioPlayer);\n","import React, { useEffect, useRef, useState } from 'react';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { IconButton } from '@material-ui/core';\nimport AudioPlayer from 'components/AudioPlayer';\nimport { RiFileAddLine } from 'react-icons/ri';\nimport { FaMusic, FaCheck } from 'react-icons/fa';\nimport { ThreadJson, VoiceJson, LocationJson } from 'models';\nimport { REACT_APP_URL_PREFIX } from 'variables';\nimport { VoiceFormData } from 'redux/components/state';\nimport { IRootState, ThunkResult } from 'store';\nimport { createThread } from 'redux/threads/thunks';\nimport { createVoice, loadVoices } from 'redux/voices/thunks';\nimport { setGeolocation } from 'redux/geolocation/actions';\nimport { setShowRecordButtonState } from 'redux/components/actions';\nimport { connect } from 'react-redux';\nimport { AudioData } from 'utils/audioRecorder';\nimport { getTimestampJson } from 'utils/time';\nimport classes from './styles.module.scss';\n\ninterface IVoiceFormProps {\n  audio: AudioData | undefined;\n  thread: ThreadJson | null;\n  geolocation: LocationJson | undefined;\n  createThread: (newThread: ThreadJson) => Promise<ThreadJson | undefined>;\n  createVoice: (\n    newVoice: VoiceJson,\n    audioBlob: Blob\n  ) => Promise<VoiceJson | undefined>;\n  setGeolocation: (geolocation?: LocationJson) => void;\n  loadVoices: (threadId: string) => void;\n  setShowRecordButtonState: (showRecordButton: boolean) => void;\n}\n\nconst VoiceForm: React.FC<IVoiceFormProps> = (props: IVoiceFormProps) => {\n  const { register, handleSubmit } = useForm<VoiceFormData>();\n  const inputRef: React.MutableRefObject<HTMLInputElement | null> = useRef(null);\n  const history = useHistory();\n\n  const [value, setValue] = useState<string>(\n    props.thread ? props.thread.title : ''\n  );\n\n  const handleInput = (event: React.ChangeEvent<HTMLInputElement>) =>\n    setValue(event.target.value);\n\n  const submitVoice = async (voiceFormData: VoiceFormData) => {\n    if (props.audio) {\n      const { threadTitle } = voiceFormData;\n\n      const timestamp = getTimestampJson();\n      const location = props.geolocation;\n\n      if (!location) return console.log('Location is not available!'); /* tslint:disable-line */\n      let threadId = '';\n      if (!props.thread) {\n        const newThread: ThreadJson = {\n          is_active: true,\n          title: threadTitle,\n          user_id: 'Z1aO565FJD1ZmaOqI9Mi', // TODO: replace hard coded user_id with logged in user.id from redux store\n          color_code: 'Y', // TODO: replace hard coded color_code with color_code state from redux store\n          bookmarked_by_users: [],\n          location,\n          timestamp\n        };\n\n        const thread = (await props.createThread(newThread)) as ThreadJson;\n        threadId = thread.id as string;\n      } else {\n        threadId = props.thread.id as string;\n      }\n\n      const { audioUrl, audioBlob } = props.audio;\n      const newVoice: VoiceJson = {\n        is_active: true,\n        thread_id: threadId,\n        user_id: 'Z1aO565FJD1ZmaOqI9Mi', // TODO: replace hard coded user_id with logged in user.id from redux store\n        voice_url: audioUrl,\n        liked_by_users: [],\n        location,\n        timestamp\n      };\n\n      const voice = await props.createVoice(newVoice, audioBlob);\n      const { thread_id } = voice as VoiceJson;\n\n      props.setGeolocation();\n      const pathname = `${REACT_APP_URL_PREFIX}/${thread_id}`;\n      history.push(pathname);\n      props.loadVoices(threadId);\n      props.setShowRecordButtonState(true);\n    } else {\n      console.log('No voice has been recorded yet!'); /* tslint:disable-line */\n    }\n  };\n\n  /* set focus on thread title input on render */\n  useEffect(() => {\n    if (inputRef.current && !props.thread) {\n      inputRef.current.focus();\n    }\n  }, [props.thread]);\n\n  return (\n    <div className={classes['voice-form']}>\n      <div className={classes.container}>\n        <div className={classes.handle} />\n\n        <form\n          id=\"voice-form\"\n          className={classes.form}\n          onSubmit={handleSubmit(submitVoice)}\n        >\n          <ul className={classes.fields}>\n            {props.thread ? null : (\n              <li className={classes.field}>\n                <label className={classes.label} htmlFor=\"channel\">\n                  選擇版區：\n                </label>\n\n                <select\n                  className={classes.select}\n                  name=\"channel\"\n                  ref={register}\n                >\n                  <option className={classes.option} value=\"吹水台\">\n                    吹水台\n                  </option>\n                </select>\n              </li>\n            )}\n\n            <li className={classes.field}>\n              <label className={classes.label} htmlFor=\"thread\">\n                {`${props.thread ? '回應' : '新貼'}題目：`}\n              </label>\n\n              <input\n                className={classes.input}\n                name=\"threadTitle\"\n                ref={e => {\n                  register(e, { required: true });\n                  inputRef.current = e;\n                }}\n                type=\"text\"\n                value={value}\n                onChange={handleInput}\n                readOnly={Boolean(props.thread)}\n              />\n            </li>\n          </ul>\n\n          <AudioPlayer audioUrl={props.audio?.audioUrl as string} />\n\n          <div className={classes.control}>\n            <div className={classes.buttons}>\n              <IconButton className={classes.new} aria-label=\"new\">\n                <RiFileAddLine />\n              </IconButton>\n\n              <IconButton className={classes.music} aria-label=\"music\">\n                <FaMusic />\n              </IconButton>\n            </div>\n\n            <IconButton\n              className={classes.submit}\n              aria-label=\"submit\"\n              type=\"submit\"\n              form=\"voice-form\"\n            >\n              <FaCheck />\n            </IconButton>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    audio: state.audios.audio,\n    geolocation: state.geolocation.geolocation\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    createThread: (newThread: ThreadJson) => dispatch(createThread(newThread)),\n    createVoice: (newVoice: VoiceJson, audioBlob: Blob) =>\n      dispatch(createVoice(newVoice, audioBlob)),\n    setGeolocation: (geolocation?: LocationJson) =>\n      dispatch(setGeolocation(geolocation)),\n    loadVoices: (threadId: string) => dispatch(loadVoices(threadId)),\n    setShowRecordButtonState: (showRecordButton: boolean) =>\n      dispatch(setShowRecordButtonState(showRecordButton))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VoiceForm);\n","import { Dispatch } from 'redux';\nimport { ThreadJson } from 'models';\nimport { REACT_APP_API_SERVER } from 'variables';\nimport {\n  IThreadsAction,\n  loadThreadsSuccess,\n  createThreadSuccess,\n  failed\n} from './actions';\n\nexport function loadThreads() {\n  return async (dispatch: Dispatch<IThreadsAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/threads`, {\n      method: 'GET'\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadThreadsSuccess(data));\n    } else {\n      dispatch(failed('LOAD_THREADS_FAILED', data));\n    }\n  };\n}\n\nexport function createThread(newThread: ThreadJson) {\n  return async (dispatch: Dispatch<IThreadsAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/threads`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json; charset=utf-8' },\n      body: JSON.stringify(newThread)\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(createThreadSuccess(data));\n      return data as ThreadJson;\n    } else {\n      dispatch(failed('CREATE_THREAD_FAILED', data));\n    }\n  };\n}\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport HeadNav from 'components/HeadNav';\nimport RecordButton from 'components/RecordButton';\nimport DrawerContainer from 'components/DrawerContainer';\nimport ThreadPanel from 'components/ThreadPanel';\nimport TimerBar from 'components/TimerBar';\nimport VoiceForm from 'components/VoiceForm';\nimport { ThreadJson } from 'models';\nimport { REACT_APP_URL_PREFIX } from 'variables';\nimport { IRootState, ThunkResult } from 'store';\nimport { DrawerState } from 'redux/components/state';\nimport { connect } from 'react-redux';\nimport classes from './styles.module.scss';\n\ninterface IMainProps {\n  drawerState: DrawerState;\n  activeThread: ThreadJson | null;\n  showRecordButton: boolean;\n  isRecording: boolean;\n}\n\nconst Main: React.FC<IMainProps> = (props: IMainProps) => {\n  return (\n    <div className={classes.main}>\n      <HeadNav />\n\n      {props.showRecordButton && <RecordButton />}\n\n      <DrawerContainer side=\"left\">\n        <p>drawer contents</p>\n      </DrawerContainer>\n\n      <DrawerContainer side=\"bottom\" disableSwipe={props.activeThread === null}>\n        {props.isRecording ? (\n          <TimerBar />\n        ) : (\n          <Switch>\n            <Route\n              path={`${REACT_APP_URL_PREFIX}/threads/new`}\n              children={<VoiceForm thread={props.activeThread} />}\n            />\n\n            <Route\n              path={`${REACT_APP_URL_PREFIX}/threads/:threadId/new`}\n              children={<VoiceForm thread={props.activeThread} />}\n            />\n\n            <Route path={`${REACT_APP_URL_PREFIX}/`} component={ThreadPanel} />\n          </Switch>\n        )}\n      </DrawerContainer>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {\n    drawerState: state.components.drawerState,\n    activeThread: state.threads.activeThread,\n    showRecordButton: state.components.showRecordButton,\n    isRecording: state.audios.isRecording\n  };\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Main);\n","export interface AudioData {\n  audioBlob: Blob;\n  audioUrl: string;\n}\n\nexport interface AudioRecorder {\n  start: () => void;\n  stop: () => Promise<AudioData>;\n}\n\nexport const audioRecorder = () =>\n  new Promise(async (resolve: (audioRecorder: AudioRecorder) => void) => {\n    const stream: MediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    const mediaRecorder: MediaRecorder = new MediaRecorder(stream);\n    let audioChunk: Blob | undefined;\n\n    const dataAvailableHandler = (event: BlobEvent) => {\n      audioChunk = event.data;\n    };\n\n    mediaRecorder.addEventListener(\n      'dataavailable',\n      dataAvailableHandler as EventListenerOrEventListenerObject\n    );\n\n    const start = () => mediaRecorder.start();\n\n    const stop = () =>\n      new Promise((resolve: (audioData: AudioData) => void) => {\n        const stopHandler: EventListenerOrEventListenerObject = () => {\n          const audioBlob = new Blob([audioChunk as Blob]);\n          const audioUrl = URL.createObjectURL(audioBlob);\n          const audioData: AudioData = { audioBlob, audioUrl };\n          resolve(audioData);\n        };\n\n        mediaRecorder.addEventListener('stop', stopHandler);\n\n        mediaRecorder.stop();\n      });\n\n    const audioRecorder: AudioRecorder = { start, stop };\n    resolve(audioRecorder);\n  });\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Map from 'components/Map';\nimport Main from 'components/Main';\nimport { IRootState, ThunkResult } from './store';\nimport { loadThreads } from 'redux/threads/thunks';\nimport { loadUsers } from 'redux/users/thunks';\nimport { audioRecorder, AudioRecorder } from 'utils/audioRecorder';\nimport { setRecorder } from 'redux/audios/actions';\nimport classes from './App.module.scss';\n\ninterface IAppProps {\n  loadThreads: () => void;\n  loadUsers: () => void;\n  setRecorder: (recorder?: AudioRecorder) => void;\n}\n\nconst App: React.FC<IAppProps> = (props: IAppProps) => {\n  const initializeRecorder = async () => {\n    const recorder = await audioRecorder();\n    props.setRecorder(recorder);\n  };\n\n  props.loadThreads();\n  props.loadUsers();\n\n  initializeRecorder();\n\n  return (\n    <div className={classes.app}>\n      <Map />\n\n      <Main />\n    </div>\n  );\n};\n\nconst mapStateToProps = (state: IRootState) => {\n  return {};\n};\n\nconst mapDispatchToProps = (dispatch: ThunkResult) => {\n  return {\n    loadThreads: () => dispatch(loadThreads()),\n    loadUsers: () => dispatch(loadUsers()),\n    setRecorder: (recorder?: AudioRecorder) => dispatch(setRecorder(recorder))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { Dispatch } from 'redux';\nimport { REACT_APP_API_SERVER } from 'variables';\nimport { IUsersAction, loadUsersSuccess, failed } from './actions';\n\nexport function loadUsers() {\n  return async (dispatch: Dispatch<IUsersAction>) => {\n    const res = await fetch(`${REACT_APP_API_SERVER}/users`, {\n      method: 'GET'\n    });\n    const { isSuccess, data } = await res.json();\n\n    if (isSuccess) {\n      dispatch(loadUsersSuccess(data));\n    } else {\n      dispatch(failed('LOAD_USERS_FAILED', data));\n    }\n  };\n}\n","import { User } from 'models';\n\nexport function loadUsersSuccess(users: Array<User>) {\n  return {\n    type: 'LOAD_USERS' as 'LOAD_USERS',\n    users\n  };\n}\n\nexport function failed(type: FAILED, msg: string) {\n  return {\n    type,\n    msg\n  };\n}\n\ntype FAILED = 'LOAD_USERS_FAILED';\n\ntype UsersActionCreators = typeof loadUsersSuccess | typeof failed;\n\nexport type IUsersAction = ReturnType<UsersActionCreators>;\n","import { IThreadsState } from './state';\nimport { IThreadsAction } from './actions';\nimport { ThreadJson } from 'models';\n\nconst initialState: IThreadsState = {\n  threads: [],\n  activeThread: null,\n  threadPlaying: false\n};\n\nexport const threadsReducer = (\n  state: IThreadsState = initialState,\n  action: IThreadsAction\n): IThreadsState => {\n  switch (action.type) {\n    case 'LOAD_THREADS': {\n      const { threads } = action;\n      return {\n        ...state,\n        threads\n      };\n    }\n    case 'CREATE_THREAD': {\n      const { newThread } = action;\n      const threads: Array<ThreadJson> = state.threads.concat(newThread);\n      return {\n        ...state,\n        threads\n      };\n    }\n    case 'SET_ACTIVE_THREAD': {\n      const { activeThread } = action;\n      return {\n        ...state,\n        activeThread\n      };\n    }\n    case 'TOGGLE_THREAD_PLAYING': {\n      const threadPlaying = !state.threadPlaying;\n      return {\n        ...state,\n        threadPlaying\n      };\n    }\n    case 'STOP_PLAYING_THREAD': {\n      return {\n        ...state,\n        threadPlaying: false\n      };\n    }\n    default:\n      return state;\n  }\n};\n","import { IVoicesState } from './state';\nimport { IVoicesAction } from './actions';\n\nconst initialState: IVoicesState = {\n  voices: []\n};\n\nexport const voicesReducer = (\n  state: IVoicesState = initialState,\n  action: IVoicesAction\n): IVoicesState => {\n  switch (action.type) {\n    case 'LOAD_VOICES':\n      const { voices } = action;\n      return {\n        ...state,\n        voices\n      };\n    default:\n      return state;\n  }\n};\n","import { IUsersState } from './state';\nimport { IUsersAction } from './actions';\n\nconst initialState: IUsersState = {\n  users: []\n};\n\nexport const usersReducer = (\n  state: IUsersState = initialState,\n  action: IUsersAction\n): IUsersState => {\n  switch (action.type) {\n    case 'LOAD_USERS':\n      const { users } = action;\n      return {\n        ...state,\n        users\n      };\n    default:\n      return state;\n  }\n};\n","import { IAudiosState } from './state';\nimport { IAudiosAction } from './actions';\n\nconst initialState: IAudiosState = {\n  recorder: undefined,\n  audio: undefined,\n  isRecording: false\n};\n\nexport const audiosReducer = (\n  state: IAudiosState = initialState,\n  action: IAudiosAction\n): IAudiosState => {\n  switch (action.type) {\n    case 'SET_RECORDER':\n      const { recorder } = action;\n      return {\n        ...state,\n        recorder\n      };\n    case 'SET_AUDIO':\n      const { audio } = action;\n      return {\n        ...state,\n        audio\n      };\n    case 'SET_IS_RECORDING_STATE':\n      const { isRecording } = action;\n      return {\n        ...state,\n        isRecording\n      };\n    default:\n      return state;\n  }\n};\n","import { IGeolocationState } from './state';\nimport { IGeolocationAction } from './actions';\n\nconst initialState: IGeolocationState = {\n  geolocation: undefined\n};\n\nexport const geolocationReducer = (\n  state: IGeolocationState = initialState,\n  action: IGeolocationAction\n): IGeolocationState => {\n  switch (action.type) {\n    case 'SET_GEOLOCATION':\n      const { geolocation } = action;\n      return {\n        ...state,\n        geolocation\n      };\n    default:\n      return state;\n  }\n};\n","import { IChannelsState } from './state';\nimport { IChannelsActions } from './actions';\n\nconst initialState: IChannelsState = {\n  channel: '吹水台'\n};\n\nexport const channelsReducer = (\n  state: IChannelsState = initialState,\n  action: IChannelsActions\n): IChannelsState => {\n  switch (action.type) {\n    case 'SET_CHANNEL':\n      const { channel } = action;\n      return {\n        ...state,\n        channel\n      };\n    default:\n      return state;\n  }\n};\n","import { IComponentsState } from 'redux/components/state';\nimport { IComponentsAction } from 'redux/components/actions';\n\nconst initialState: IComponentsState = {\n  showRecordButton: true,\n  showPlayList: false,\n  drawerState: {\n    top: false,\n    right: false,\n    bottom: false,\n    left: false\n  },\n  embeddedRecordButton: false\n};\n\nexport function componentsReducer(\n  state: IComponentsState = initialState,\n  action: IComponentsAction\n) {\n  switch (action.type) {\n    case 'SET_SHOW_RECORD_BUTTON_STATE':\n      const { showRecordButton } = action;\n      return {\n        ...state,\n        showRecordButton\n      };\n    case 'SET_SHOW_PLAY_LIST_STATE':\n      const { showPlayList } = action;\n      return {\n        ...state,\n        showPlayList\n      };\n    case 'SET_DRAWER_STATE':\n      const { side, open } = action;\n      const { drawerState } = state;\n      return {\n        ...state,\n        drawerState: {\n          ...drawerState,\n          [side]: open\n        }\n      };\n    case 'EMBED_RECORD_BUTTON':\n      const { embeddedRecordButton } = action;\n      return {\n        ...state,\n        embeddedRecordButton\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  compose,\n  createStore,\n  combineReducers,\n  applyMiddleware,\n  Store\n} from 'redux';\nimport { createBrowserHistory } from 'history';\nimport {\n  RouterState,\n  connectRouter,\n  routerMiddleware\n} from 'connected-react-router';\nimport thunk, { ThunkDispatch } from 'redux-thunk';\nimport { IThreadsState } from 'redux/threads/state';\nimport { IVoicesState } from 'redux/voices/state';\nimport { IUsersState } from 'redux/users/state';\nimport { IAudiosState } from 'redux/audios/state';\nimport { IGeolocationState } from 'redux/geolocation/state';\nimport { IChannelsState } from 'redux/channels/state';\nimport { IComponentsState } from 'redux/components/state';\nimport { IThreadsAction } from 'redux/threads/actions';\nimport { IVoicesAction } from 'redux/voices/actions';\nimport { IUsersAction } from 'redux/users/actions';\nimport { IAudiosAction } from 'redux/audios/actions';\nimport { IGeolocationAction } from 'redux/geolocation/actions';\nimport { IChannelsActions } from 'redux/channels/actions';\nimport { IComponentsAction } from 'redux/components/actions';\nimport { threadsReducer } from 'redux/threads/reducer';\nimport { voicesReducer } from 'redux/voices/reducer';\nimport { usersReducer } from 'redux/users/reducer';\nimport { audiosReducer } from 'redux/audios/reducer';\nimport { geolocationReducer } from 'redux/geolocation/reducer';\nimport { channelsReducer } from 'redux/channels/reducer';\nimport { componentsReducer } from 'redux/components/reducer';\n\ndeclare global {\n  interface Window {\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__: any;\n    getEventListeners: (element: any) => Array<any>;\n  }\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const history = createBrowserHistory();\n\nexport interface IRootState {\n  threads: IThreadsState;\n  voices: IVoicesState;\n  users: IUsersState;\n  audios: IAudiosState;\n  geolocation: IGeolocationState;\n  channels: IChannelsState;\n  components: IComponentsState;\n  router: RouterState;\n}\n\ntype IRootAction =\n  | IThreadsAction\n  | IVoicesAction\n  | IUsersAction\n  | IAudiosAction\n  | IGeolocationAction\n  | IChannelsActions\n  | IComponentsAction;\n\nconst rootReducer = combineReducers<IRootState>({\n  threads: threadsReducer,\n  voices: voicesReducer,\n  users: usersReducer,\n  audios: audiosReducer,\n  geolocation: geolocationReducer,\n  channels: channelsReducer,\n  components: componentsReducer,\n  router: connectRouter(history)\n});\n\nexport type ThunkResult = ThunkDispatch<IRootState, null, IRootAction>;\n\nconst store: Store<IRootState, IRootAction> = createStore(\n  rootReducer,\n  composeEnhancers(\n    applyMiddleware(thunk),\n    applyMiddleware(routerMiddleware(history))\n  )\n);\n\nexport default store;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport App from './App';\nimport store, { history } from 'store';\nimport * as serviceWorker from './serviceWorker';\nimport './index.scss';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedRouter history={history}>\n      <App />\n    </ConnectedRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__ijZIq\",\"text-size-small\":\"styles_text-size-small__1lNhe\",\"text-size-normal\":\"styles_text-size-normal__3tbWC\",\"text-size-large\":\"styles_text-size-large__jaA8s\",\"text-size-larger\":\"styles_text-size-larger__3cF7A\",\"text-bold\":\"styles_text-bold__38hor\",\"text-uppercase\":\"styles_text-uppercase__xPWzx\",\"voice-form\":\"styles_voice-form__3gLiu\",\"container\":\"styles_container__zAavQ\",\"handle\":\"styles_handle__ZPzTV\",\"form\":\"styles_form__3CGWh\",\"fields\":\"styles_fields__1ASB4\",\"field\":\"styles_field__2_bzl\",\"label\":\"styles_label__lRzte\",\"select\":\"styles_select__3NPIu\",\"input\":\"styles_input__k9ZVB\",\"control\":\"styles_control__kds9w\",\"buttons\":\"styles_buttons__3vh4D\",\"new\":\"styles_new__v6Lj7\",\"music\":\"styles_music__3MWRH\",\"submit\":\"styles_submit__3y_fb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__9ID4P\",\"text-size-small\":\"styles_text-size-small__EuMrL\",\"text-size-normal\":\"styles_text-size-normal__1OTia\",\"text-size-large\":\"styles_text-size-large__3vK1o\",\"text-size-larger\":\"styles_text-size-larger__28WhF\",\"text-bold\":\"styles_text-bold__lZla8\",\"text-uppercase\":\"styles_text-uppercase__bPdLp\",\"thread-panel\":\"styles_thread-panel__1kB56\",\"container\":\"styles_container__1lcW7\",\"handle\":\"styles_handle__226hH\",\"contents\":\"styles_contents__33G3C\",\"title\":\"styles_title__24vsv\",\"info\":\"styles_info__3NRDf\",\"control\":\"styles_control__252yp\",\"control-star\":\"styles_control-star__1c7pK\",\"control-share\":\"styles_control-share__Pds8-\",\"thread-previous\":\"styles_thread-previous__3lb-e\",\"thread-next\":\"styles_thread-next__1cawo\",\"thread-play\":\"styles_thread-play__2CtbI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__2Z2H_\",\"text-size-small\":\"styles_text-size-small__IjZsk\",\"text-size-normal\":\"styles_text-size-normal__18x1M\",\"text-size-large\":\"styles_text-size-large__2qn5H\",\"text-size-larger\":\"styles_text-size-larger__1JRyu\",\"text-bold\":\"styles_text-bold__tZ_OT\",\"text-uppercase\":\"styles_text-uppercase___vsP3\",\"head-nav\":\"styles_head-nav__2AjrA\",\"nav-menu\":\"styles_nav-menu__2jGZn\",\"nav-search\":\"styles_nav-search__1ar0n\",\"switch\":\"styles_switch__E7v1U\",\"stage\":\"styles_stage__22-Cl\",\"stage-previous\":\"styles_stage-previous__2AVMx\",\"stage-next\":\"styles_stage-next__3YrgJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__3CPzR\",\"text-size-small\":\"styles_text-size-small__39sOw\",\"text-size-normal\":\"styles_text-size-normal__39O6I\",\"text-size-large\":\"styles_text-size-large__kZVIY\",\"text-size-larger\":\"styles_text-size-larger__3d6xL\",\"text-bold\":\"styles_text-bold__2tYsD\",\"text-uppercase\":\"styles_text-uppercase__ESUnP\",\"voice-info\":\"styles_voice-info__2Dqfq\",\"profile\":\"styles_profile__3TdcI\",\"like\":\"styles_like__ZTv0n\",\"badge\":\"styles_badge__1ktpI\",\"info\":\"styles_info__9gAry\",\"date\":\"styles_date__1qg4x\",\"user\":\"styles_user__3DtHt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__19mQ2\",\"text-size-small\":\"styles_text-size-small__3PFkO\",\"text-size-normal\":\"styles_text-size-normal__30l_J\",\"text-size-large\":\"styles_text-size-large__2YLkK\",\"text-size-larger\":\"styles_text-size-larger__1CCYy\",\"text-bold\":\"styles_text-bold__1ke-k\",\"text-uppercase\":\"styles_text-uppercase__1FLP5\",\"map\":\"styles_map__3B7Q2\",\"tile-layer\":\"styles_tile-layer__1vgma\",\"thread\":\"styles_thread__32bcF\",\"new-thread\":\"styles_new-thread__1rYZt\",\"popup\":\"styles_popup__3EyS_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__dLVMu\",\"text-size-small\":\"styles_text-size-small__1T3RC\",\"text-size-normal\":\"styles_text-size-normal__1JyEr\",\"text-size-large\":\"styles_text-size-large__1Sx-k\",\"text-size-larger\":\"styles_text-size-larger__2dcYQ\",\"text-bold\":\"styles_text-bold__33hvE\",\"text-uppercase\":\"styles_text-uppercase__XCFEW\",\"voice-player\":\"styles_voice-player__2kZum\",\"control\":\"styles_control__2-hO5\",\"play\":\"styles_play__3vUqD\",\"delete\":\"styles_delete__X0VW1\",\"wave-form\":\"styles_wave-form__1A4Vl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__289PS\",\"text-size-small\":\"styles_text-size-small__3A4cv\",\"text-size-normal\":\"styles_text-size-normal__3kkF7\",\"text-size-large\":\"styles_text-size-large__3twJV\",\"text-size-larger\":\"styles_text-size-larger__3S1MH\",\"text-bold\":\"styles_text-bold__3S_vo\",\"text-uppercase\":\"styles_text-uppercase__38Dsw\",\"record-button\":\"styles_record-button__2zE4x\",\"floating\":\"styles_floating__1K0uC\",\"button\":\"styles_button__2Lhpx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__QdQq8\",\"text-size-small\":\"styles_text-size-small__1ntVF\",\"text-size-normal\":\"styles_text-size-normal__1QG0Q\",\"text-size-large\":\"styles_text-size-large__60MzJ\",\"text-size-larger\":\"styles_text-size-larger__1NDP3\",\"text-bold\":\"styles_text-bold__2aWdQ\",\"text-uppercase\":\"styles_text-uppercase__2HQOU\",\"play-list\":\"styles_play-list__xoJ8L\",\"open\":\"styles_open__24lEQ\",\"voices\":\"styles_voices__32pWd\",\"voice\":\"styles_voice__lsVyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__Bb7dO\",\"text-size-small\":\"styles_text-size-small__29iPd\",\"text-size-normal\":\"styles_text-size-normal__1FFJy\",\"text-size-large\":\"styles_text-size-large__2NFd2\",\"text-size-larger\":\"styles_text-size-larger___t97M\",\"text-bold\":\"styles_text-bold__1Etxo\",\"text-uppercase\":\"styles_text-uppercase__1akFl\",\"drawer\":\"styles_drawer__2KdUm\",\"drawer-horizontal\":\"styles_drawer-horizontal__39eUO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__2vnjx\",\"text-size-small\":\"styles_text-size-small__3BLTI\",\"text-size-normal\":\"styles_text-size-normal__3qJii\",\"text-size-large\":\"styles_text-size-large__1ze8J\",\"text-size-larger\":\"styles_text-size-larger__2z5Bx\",\"text-bold\":\"styles_text-bold__1qn8k\",\"text-uppercase\":\"styles_text-uppercase__2Z6AJ\",\"timer-bar\":\"styles_timer-bar__1Pml3\",\"timer\":\"styles_timer__1qpE0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text-size-smaller\":\"styles_text-size-smaller__1fi0Z\",\"text-size-small\":\"styles_text-size-small__PtZps\",\"text-size-normal\":\"styles_text-size-normal__MAOk3\",\"text-size-large\":\"styles_text-size-large__2FZ2E\",\"text-size-larger\":\"styles_text-size-larger__2EDnl\",\"text-bold\":\"styles_text-bold__37IFA\",\"text-uppercase\":\"styles_text-uppercase__36vkr\",\"main\":\"styles_main__3ZYez\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\"};"],"sourceRoot":""}